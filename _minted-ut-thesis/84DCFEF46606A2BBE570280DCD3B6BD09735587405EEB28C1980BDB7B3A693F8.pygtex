\begin{Verbatim}[commandchars=\\\{\},codes={\catcode`\$=3\catcode`\^=7\catcode`\_=8}]
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}iostream\PYGZgt{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}string\PYGZgt{}}

\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}cxxtest/TestSuite.h\PYGZgt{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZdq{}ExecutableSupport.hpp\PYGZdq{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZdq{}Exception.hpp\PYGZdq{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZdq{}PetscTools.hpp\PYGZdq{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZdq{}PetscException.hpp\PYGZdq{}}

\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZdq{}WanStemCellCycleModel.hpp\PYGZdq{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZdq{}HeCellCycleModel.hpp\PYGZdq{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZdq{}OffLatticeSimulationPropertyStop.hpp\PYGZdq{}}

\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZdq{}AbstractCellBasedTestSuite.hpp\PYGZdq{}}

\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZdq{}WildTypeCellMutationState.hpp\PYGZdq{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZdq{}StemCellProliferativeType.hpp\PYGZdq{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZdq{}TransitCellProliferativeType.hpp\PYGZdq{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZdq{}DifferentiatedCellProliferativeType.hpp\PYGZdq{}}

\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZdq{}CellsGenerator.hpp\PYGZdq{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZdq{}HoneycombMeshGenerator.hpp\PYGZdq{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZdq{}NodesOnlyMesh.hpp\PYGZdq{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZdq{}NodeBasedCellPopulation.hpp\PYGZdq{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZdq{}VertexBasedCellPopulation.hpp\PYGZdq{}}

\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZdq{}CellProliferativeTypesCountWriter.hpp\PYGZdq{}}

\PYG{k+kt}{int} \PYG{n+nf}{main}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{argc}\PYG{p}{,} \PYG{k+kt}{char} \PYG{o}{*}\PYG{n}{argv}\PYG{p}{[])}
\PYG{p}{\PYGZob{}}
    \PYG{n}{ExecutableSupport}\PYG{o}{::}\PYG{n}{StartupWithoutShowingCopyright}\PYG{p}{(}\PYG{o}{\PYGZam{}}\PYG{n}{argc}\PYG{p}{,} \PYG{o}{\PYGZam{}}\PYG{n}{argv}\PYG{p}{);}
    \PYG{c+c1}{//main() returns code indicating sim run success or failure mode}
    \PYG{k+kt}{int} \PYG{n}{exit\PYGZus{}code} \PYG{o}{=} \PYG{n}{ExecutableSupport}\PYG{o}{::}\PYG{n}{EXIT\PYGZus{}OK}\PYG{p}{;}

    \PYG{k}{if} \PYG{p}{(}\PYG{n}{argc} \PYG{o}{!=} \PYG{l+m+mi}{23}\PYG{p}{)}
    \PYG{p}{\PYGZob{}}
        \PYG{n}{ExecutableSupport}\PYG{o}{::}\PYG{n}{PrintError}\PYG{p}{(}
                \PYG{l+s}{\PYGZdq{}Wrong arguments for simulator.}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{Usage (replace\PYGZlt{}\PYGZgt{} with values, pass bools as 0 or 1):}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{ WanSimulator \PYGZlt{}directoryString\PYGZgt{} \PYGZlt{}startSeedUnsigned\PYGZgt{} \PYGZlt{}endSeedUnsigned\PYGZgt{} \PYGZlt{}cmzResidencyTimeDoubleHours\PYGZgt{} \PYGZlt{}stemDivisorDouble\PYGZgt{} \PYGZlt{}meanProgenitorPopualtion@3dpfDouble\PYGZgt{} \PYGZlt{}stdProgenitorPopulation@3dpfDouble\PYGZgt{} \PYGZlt{}stemGammaShiftDouble\PYGZgt{} \PYGZlt{}stemGammaShapeDouble\PYGZgt{} \PYGZlt{}stemGammaScaleDouble\PYGZgt{} \PYGZlt{}progenitorGammaShiftDouble\PYGZgt{} \PYGZlt{}progenitorGammaShapeDouble\PYGZgt{} \PYGZlt{}progenitorGammaScaleDouble\PYGZgt{} \PYGZlt{}progenitorSisterShiftDouble\PYGZgt{} \PYGZlt{}mMitoticModePhase2Double\PYGZgt{} \PYGZlt{}mMitoticModePhase3Double\PYGZgt{} \PYGZlt{}pPP1Double(0\PYGZhy{}1)\PYGZgt{} \PYGZlt{}pPD1Double(0\PYGZhy{}1)\PYGZgt{} \PYGZlt{}pPP1Double(0\PYGZhy{}1)\PYGZgt{} \PYGZlt{}pPD1Double(0\PYGZhy{}1)\PYGZgt{} \PYGZlt{}pPP1Double(0\PYGZhy{}1)\PYGZgt{} \PYGZlt{}pPD1Double(0\PYGZhy{}1)\PYGZgt{}\PYGZdq{}}\PYG{p}{,}
                \PYG{n+nb}{true}\PYG{p}{);}
        \PYG{n}{exit\PYGZus{}code} \PYG{o}{=} \PYG{n}{ExecutableSupport}\PYG{o}{::}\PYG{n}{EXIT\PYGZus{}BAD\PYGZus{}ARGUMENTS}\PYG{p}{;}
        \PYG{k}{return} \PYG{n}{exit\PYGZus{}code}\PYG{p}{;}
    \PYG{p}{\PYGZcb{}}

    \PYG{c+cm}{/***********************}
\PYG{c+cm}{     * SIMULATOR PARAMETERS}
\PYG{c+cm}{     ***********************/}
    \PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{directoryString}\PYG{p}{;}
    \PYG{k+kt}{unsigned} \PYG{n}{startSeed}\PYG{p}{,} \PYG{n}{endSeed}\PYG{p}{;}
    \PYG{k+kt}{double} \PYG{n}{cmzResidencyTime}\PYG{p}{;}
    \PYG{k+kt}{double} \PYG{n}{stemDivisor}\PYG{p}{,} \PYG{n}{progenitorMean}\PYG{p}{,} \PYG{n}{progenitorStd}\PYG{p}{;}
    \PYG{k+kt}{double} \PYG{n}{stemGammaShift}\PYG{p}{,} \PYG{n}{stemGammaShape}\PYG{p}{,} \PYG{n}{stemGammaScale}\PYG{p}{,} \PYG{n}{progenitorGammaShift}\PYG{p}{,} \PYG{n}{progenitorGammaShape}\PYG{p}{,}
            \PYG{n}{progenitorGammaScale}\PYG{p}{,} \PYG{n}{progenitorGammaSister}\PYG{p}{;}
    \PYG{k+kt}{double} \PYG{n}{mitoticModePhase2}\PYG{p}{,} \PYG{n}{mitoticModePhase3}\PYG{p}{,} \PYG{n}{pPP1}\PYG{p}{,} \PYG{n}{pPD1}\PYG{p}{,} \PYG{n}{pPP2}\PYG{p}{,} \PYG{n}{pPD2}\PYG{p}{,} \PYG{n}{pPP3}\PYG{p}{,} \PYG{n}{pPD3}\PYG{p}{;} \PYG{c+c1}{//stochastic He model parameters}

    \PYG{c+c1}{//PARSE ARGUMENTS}
    \PYG{n}{directoryString} \PYG{o}{=} \PYG{n}{argv}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{];}
    \PYG{n}{startSeed} \PYG{o}{=} \PYG{n}{std}\PYG{o}{::}\PYG{n}{stoul}\PYG{p}{(}\PYG{n}{argv}\PYG{p}{[}\PYG{l+m+mi}{2}\PYG{p}{]);}
    \PYG{n}{endSeed} \PYG{o}{=} \PYG{n}{std}\PYG{o}{::}\PYG{n}{stoul}\PYG{p}{(}\PYG{n}{argv}\PYG{p}{[}\PYG{l+m+mi}{3}\PYG{p}{]);}
    \PYG{n}{cmzResidencyTime} \PYG{o}{=} \PYG{n}{std}\PYG{o}{::}\PYG{n}{stod}\PYG{p}{(}\PYG{n}{argv}\PYG{p}{[}\PYG{l+m+mi}{4}\PYG{p}{]);}
    \PYG{c+c1}{//starting cell number distributions}
    \PYG{n}{stemDivisor} \PYG{o}{=} \PYG{n}{std}\PYG{o}{::}\PYG{n}{stod}\PYG{p}{(}\PYG{n}{argv}\PYG{p}{[}\PYG{l+m+mi}{5}\PYG{p}{]);}
    \PYG{n}{progenitorMean} \PYG{o}{=} \PYG{n}{std}\PYG{o}{::}\PYG{n}{stod}\PYG{p}{(}\PYG{n}{argv}\PYG{p}{[}\PYG{l+m+mi}{6}\PYG{p}{]);}
    \PYG{n}{progenitorStd} \PYG{o}{=} \PYG{n}{std}\PYG{o}{::}\PYG{n}{stod}\PYG{p}{(}\PYG{n}{argv}\PYG{p}{[}\PYG{l+m+mi}{7}\PYG{p}{]);}
    \PYG{c+c1}{//cycle duration params}
    \PYG{n}{stemGammaShift} \PYG{o}{=} \PYG{n}{std}\PYG{o}{::}\PYG{n}{stod}\PYG{p}{(}\PYG{n}{argv}\PYG{p}{[}\PYG{l+m+mi}{8}\PYG{p}{]);}
    \PYG{n}{stemGammaShape} \PYG{o}{=} \PYG{n}{std}\PYG{o}{::}\PYG{n}{stod}\PYG{p}{(}\PYG{n}{argv}\PYG{p}{[}\PYG{l+m+mi}{9}\PYG{p}{]);}
    \PYG{n}{stemGammaScale} \PYG{o}{=} \PYG{n}{std}\PYG{o}{::}\PYG{n}{stod}\PYG{p}{(}\PYG{n}{argv}\PYG{p}{[}\PYG{l+m+mi}{10}\PYG{p}{]);}
    \PYG{n}{progenitorGammaShift} \PYG{o}{=} \PYG{n}{std}\PYG{o}{::}\PYG{n}{stod}\PYG{p}{(}\PYG{n}{argv}\PYG{p}{[}\PYG{l+m+mi}{11}\PYG{p}{]);}
    \PYG{n}{progenitorGammaShape} \PYG{o}{=} \PYG{n}{std}\PYG{o}{::}\PYG{n}{stod}\PYG{p}{(}\PYG{n}{argv}\PYG{p}{[}\PYG{l+m+mi}{12}\PYG{p}{]);}
    \PYG{n}{progenitorGammaScale} \PYG{o}{=} \PYG{n}{std}\PYG{o}{::}\PYG{n}{stod}\PYG{p}{(}\PYG{n}{argv}\PYG{p}{[}\PYG{l+m+mi}{13}\PYG{p}{]);}
    \PYG{n}{progenitorGammaSister} \PYG{o}{=} \PYG{n}{std}\PYG{o}{::}\PYG{n}{stod}\PYG{p}{(}\PYG{n}{argv}\PYG{p}{[}\PYG{l+m+mi}{14}\PYG{p}{]);}
    \PYG{c+c1}{//He model params}
    \PYG{n}{mitoticModePhase2} \PYG{o}{=} \PYG{n}{std}\PYG{o}{::}\PYG{n}{stod}\PYG{p}{(}\PYG{n}{argv}\PYG{p}{[}\PYG{l+m+mi}{15}\PYG{p}{]);}
    \PYG{n}{mitoticModePhase3} \PYG{o}{=} \PYG{n}{std}\PYG{o}{::}\PYG{n}{stod}\PYG{p}{(}\PYG{n}{argv}\PYG{p}{[}\PYG{l+m+mi}{16}\PYG{p}{]);}
    \PYG{n}{pPP1} \PYG{o}{=} \PYG{n}{std}\PYG{o}{::}\PYG{n}{stod}\PYG{p}{(}\PYG{n}{argv}\PYG{p}{[}\PYG{l+m+mi}{17}\PYG{p}{]);}
    \PYG{n}{pPD1} \PYG{o}{=} \PYG{n}{std}\PYG{o}{::}\PYG{n}{stod}\PYG{p}{(}\PYG{n}{argv}\PYG{p}{[}\PYG{l+m+mi}{18}\PYG{p}{]);}
    \PYG{n}{pPP2} \PYG{o}{=} \PYG{n}{std}\PYG{o}{::}\PYG{n}{stod}\PYG{p}{(}\PYG{n}{argv}\PYG{p}{[}\PYG{l+m+mi}{19}\PYG{p}{]);}
    \PYG{n}{pPD2} \PYG{o}{=} \PYG{n}{std}\PYG{o}{::}\PYG{n}{stod}\PYG{p}{(}\PYG{n}{argv}\PYG{p}{[}\PYG{l+m+mi}{20}\PYG{p}{]);}
    \PYG{n}{pPP3} \PYG{o}{=} \PYG{n}{std}\PYG{o}{::}\PYG{n}{stod}\PYG{p}{(}\PYG{n}{argv}\PYG{p}{[}\PYG{l+m+mi}{21}\PYG{p}{]);}
    \PYG{n}{pPD3} \PYG{o}{=} \PYG{n}{std}\PYG{o}{::}\PYG{n}{stod}\PYG{p}{(}\PYG{n}{argv}\PYG{p}{[}\PYG{l+m+mi}{22}\PYG{p}{]);}

    \PYG{n}{std}\PYG{o}{::}\PYG{n}{vector}\PYG{o}{\PYGZlt{}}\PYG{k+kt}{double}\PYG{o}{\PYGZgt{}} \PYG{n}{stemOffspringParams} \PYG{o}{=} \PYG{p}{\PYGZob{}} \PYG{n}{mitoticModePhase2}\PYG{p}{,} \PYG{n}{mitoticModePhase2} \PYG{o}{+} \PYG{n}{mitoticModePhase3}\PYG{p}{,} \PYG{n}{pPP1}\PYG{p}{,} \PYG{n}{pPD1}\PYG{p}{,}
                                                \PYG{n}{pPP2}\PYG{p}{,} \PYG{n}{pPD2}\PYG{p}{,} \PYG{n}{pPP3}\PYG{p}{,} \PYG{n}{pPD3}\PYG{p}{,} \PYG{n}{progenitorGammaShift}\PYG{p}{,} \PYG{n}{progenitorGammaShape}\PYG{p}{,}
                                                \PYG{n}{progenitorGammaScale}\PYG{p}{,} \PYG{n}{progenitorGammaSister} \PYG{p}{\PYGZcb{};}

    \PYG{c+cm}{/************************}
\PYG{c+cm}{     * PARAMETER/ARGUMENT SANITY CHECK}
\PYG{c+cm}{     ************************/}
    \PYG{k+kt}{bool} \PYG{n}{sane} \PYG{o}{=} \PYG{l+m+mi}{1}\PYG{p}{;}

    \PYG{k}{if} \PYG{p}{(}\PYG{n}{endSeed} \PYG{o}{\PYGZlt{}} \PYG{n}{startSeed}\PYG{p}{)}
    \PYG{p}{\PYGZob{}}
        \PYG{n}{ExecutableSupport}\PYG{o}{::}\PYG{n}{PrintError}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Bad start \PYGZam{} end seeds (arguments, 3, 4). endSeed must not be \PYGZlt{} startSeed\PYGZdq{}}\PYG{p}{);}
        \PYG{n}{sane} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
    \PYG{p}{\PYGZcb{}}

    \PYG{k}{if} \PYG{p}{(}\PYG{n}{cmzResidencyTime} \PYG{o}{\PYGZlt{}=} \PYG{l+m+mi}{0}\PYG{p}{)}
    \PYG{p}{\PYGZob{}}
        \PYG{n}{ExecutableSupport}\PYG{o}{::}\PYG{n}{PrintError}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Bad CMZ residency time (argument 5). cmzResidencyTime must be positive\PYGZhy{}valued\PYGZdq{}}\PYG{p}{);}
        \PYG{n}{sane} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
    \PYG{p}{\PYGZcb{}}

    \PYG{k}{if} \PYG{p}{(}\PYG{n}{stemDivisor} \PYG{o}{\PYGZlt{}=} \PYG{l+m+mi}{0}\PYG{p}{)}
    \PYG{p}{\PYGZob{}}
        \PYG{n}{ExecutableSupport}\PYG{o}{::}\PYG{n}{PrintError}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Bad stemDivisor (argument 6). stemDivisor must be positive\PYGZhy{}valued\PYGZdq{}}\PYG{p}{);}
        \PYG{n}{sane} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
    \PYG{p}{\PYGZcb{}}

    \PYG{k}{if} \PYG{p}{(}\PYG{n}{progenitorMean} \PYG{o}{\PYGZlt{}=} \PYG{l+m+mi}{0} \PYG{o}{||} \PYG{n}{progenitorStd} \PYG{o}{\PYGZlt{}=} \PYG{l+m+mi}{0}\PYG{p}{)}
    \PYG{p}{\PYGZob{}}
        \PYG{n}{ExecutableSupport}\PYG{o}{::}\PYG{n}{PrintError}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Bad progenitorMean or progenitorStd (arguments 7,8). Must be positive\PYGZhy{}valued\PYGZdq{}}\PYG{p}{);}
        \PYG{n}{sane} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
    \PYG{p}{\PYGZcb{}}

    \PYG{k}{if} \PYG{p}{(}\PYG{n}{stemGammaShift} \PYG{o}{\PYGZlt{}} \PYG{l+m+mi}{0} \PYG{o}{||} \PYG{n}{stemGammaShape} \PYG{o}{\PYGZlt{}=} \PYG{l+m+mi}{0} \PYG{o}{||} \PYG{n}{stemGammaScale} \PYG{o}{\PYGZlt{}=} \PYG{l+m+mi}{0}\PYG{p}{)}
    \PYG{p}{\PYGZob{}}
        \PYG{n}{ExecutableSupport}\PYG{o}{::}\PYG{n}{PrintError}\PYG{p}{(}
                \PYG{l+s}{\PYGZdq{}Bad stemGammaShift, stemGammaShape, or stemGammaScale (arguments 9, 10, 11). Shifts must be \PYGZgt{}=0, cycle shape and scale params must be positive\PYGZhy{}valued\PYGZdq{}}\PYG{p}{);}
        \PYG{n}{sane} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
    \PYG{p}{\PYGZcb{}}

    \PYG{k}{if} \PYG{p}{(}\PYG{n}{progenitorGammaShift} \PYG{o}{\PYGZlt{}} \PYG{l+m+mi}{0} \PYG{o}{||} \PYG{n}{progenitorGammaShape} \PYG{o}{\PYGZlt{}=} \PYG{l+m+mi}{0} \PYG{o}{||} \PYG{n}{progenitorGammaScale} \PYG{o}{\PYGZlt{}=} \PYG{l+m+mi}{0} \PYG{o}{||} \PYG{n}{progenitorGammaSister} \PYG{o}{\PYGZlt{}} \PYG{l+m+mi}{0}\PYG{p}{)}
    \PYG{p}{\PYGZob{}}
        \PYG{n}{ExecutableSupport}\PYG{o}{::}\PYG{n}{PrintError}\PYG{p}{(}
                \PYG{l+s}{\PYGZdq{}Bad progenitorGammaShift, progenitorGammaShape, progenitorGammaScale, or progenitorGammaSisterShift (arguments 12,13,14,15). Shifts must be \PYGZgt{}=0, cycle shape and scale params must be positive\PYGZhy{}valued\PYGZdq{}}\PYG{p}{);}
        \PYG{n}{sane} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
    \PYG{p}{\PYGZcb{}}

    \PYG{k}{if} \PYG{p}{(}\PYG{n}{mitoticModePhase2} \PYG{o}{\PYGZlt{}} \PYG{l+m+mi}{0}\PYG{p}{)}
    \PYG{p}{\PYGZob{}}
        \PYG{n}{ExecutableSupport}\PYG{o}{::}\PYG{n}{PrintError}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Bad mitoticModePhase2 (argument 14). Must be \PYGZgt{}0\PYGZdq{}}\PYG{p}{);}
        \PYG{n}{sane} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
    \PYG{p}{\PYGZcb{}}
    \PYG{k}{if} \PYG{p}{(}\PYG{n}{mitoticModePhase3} \PYG{o}{\PYGZlt{}} \PYG{l+m+mi}{0}\PYG{p}{)}
    \PYG{p}{\PYGZob{}}
        \PYG{n}{ExecutableSupport}\PYG{o}{::}\PYG{n}{PrintError}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Bad mitoticModePhase3 (argument 15). Must be \PYGZgt{}0\PYGZdq{}}\PYG{p}{);}
        \PYG{n}{sane} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
    \PYG{p}{\PYGZcb{}}
    \PYG{k}{if} \PYG{p}{(}\PYG{n}{pPP1} \PYG{o}{+} \PYG{n}{pPD1} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{1} \PYG{o}{||} \PYG{n}{pPP1} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{1} \PYG{o}{||} \PYG{n}{pPP1} \PYG{o}{\PYGZlt{}} \PYG{l+m+mi}{0} \PYG{o}{||} \PYG{n}{pPD1} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{1} \PYG{o}{||} \PYG{n}{pPD1} \PYG{o}{\PYGZlt{}} \PYG{l+m+mi}{0}\PYG{p}{)}
    \PYG{p}{\PYGZob{}}
        \PYG{n}{ExecutableSupport}\PYG{o}{::}\PYG{n}{PrintError}\PYG{p}{(}
                \PYG{l+s}{\PYGZdq{}Bad phase 1 probabilities (arguments 16, 17). pPP1 + pPD1 should be \PYGZgt{}=0, \PYGZlt{}=1, sum should not exceed 1\PYGZdq{}}\PYG{p}{);}
        \PYG{n}{sane} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
    \PYG{p}{\PYGZcb{}}
    \PYG{k}{if} \PYG{p}{(}\PYG{n}{pPP2} \PYG{o}{+} \PYG{n}{pPD2} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{1} \PYG{o}{||} \PYG{n}{pPP2} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{1} \PYG{o}{||} \PYG{n}{pPP2} \PYG{o}{\PYGZlt{}} \PYG{l+m+mi}{0} \PYG{o}{||} \PYG{n}{pPD2} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{1} \PYG{o}{||} \PYG{n}{pPD2} \PYG{o}{\PYGZlt{}} \PYG{l+m+mi}{0}\PYG{p}{)}
    \PYG{p}{\PYGZob{}}
        \PYG{n}{ExecutableSupport}\PYG{o}{::}\PYG{n}{PrintError}\PYG{p}{(}
                \PYG{l+s}{\PYGZdq{}Bad phase 2 probabilities (arguments 18, 19). pPP2 + pPD2 should be \PYGZgt{}=0, \PYGZlt{}=1, sum should not exceed 1\PYGZdq{}}\PYG{p}{);}
        \PYG{n}{sane} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
    \PYG{p}{\PYGZcb{}}
    \PYG{k}{if} \PYG{p}{(}\PYG{n}{pPP3} \PYG{o}{+} \PYG{n}{pPD3} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{1} \PYG{o}{||} \PYG{n}{pPP3} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{1} \PYG{o}{||} \PYG{n}{pPP3} \PYG{o}{\PYGZlt{}} \PYG{l+m+mi}{0} \PYG{o}{||} \PYG{n}{pPD3} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{1} \PYG{o}{||} \PYG{n}{pPD3} \PYG{o}{\PYGZlt{}} \PYG{l+m+mi}{0}\PYG{p}{)}
    \PYG{p}{\PYGZob{}}
        \PYG{n}{ExecutableSupport}\PYG{o}{::}\PYG{n}{PrintError}\PYG{p}{(}
                \PYG{l+s}{\PYGZdq{}Bad phase 3 probabilities (arguments 20, 21). pPP3 + pPD3 should be \PYGZgt{}=0, \PYGZlt{}=1, sum should not exceed 1\PYGZdq{}}\PYG{p}{);}
        \PYG{n}{sane} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
    \PYG{p}{\PYGZcb{}}

    \PYG{k}{if} \PYG{p}{(}\PYG{n}{sane} \PYG{o}{==} \PYG{l+m+mi}{0}\PYG{p}{)}
    \PYG{p}{\PYGZob{}}
        \PYG{n}{ExecutableSupport}\PYG{o}{::}\PYG{n}{PrintError}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Exiting with bad arguments. See errors for details\PYGZdq{}}\PYG{p}{);}
        \PYG{n}{exit\PYGZus{}code} \PYG{o}{=} \PYG{n}{ExecutableSupport}\PYG{o}{::}\PYG{n}{EXIT\PYGZus{}BAD\PYGZus{}ARGUMENTS}\PYG{p}{;}
        \PYG{k}{return} \PYG{n}{exit\PYGZus{}code}\PYG{p}{;}
    \PYG{p}{\PYGZcb{}}

    \PYG{c+cm}{/************************}
\PYG{c+cm}{     * SIMULATOR SETUP \PYGZam{} RUN}
\PYG{c+cm}{     ************************/}

    \PYG{n}{ExecutableSupport}\PYG{o}{::}\PYG{n}{Print}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Simulator writing files to directory \PYGZdq{}} \PYG{o}{+} \PYG{n}{directoryString}\PYG{p}{);}

\PYG{c+c1}{//Instance RNG}
    \PYG{n}{RandomNumberGenerator}\PYG{o}{*} \PYG{n}{p\PYGZus{}RNG} \PYG{o}{=} \PYG{n}{RandomNumberGenerator}\PYG{o}{::}\PYG{n}{Instance}\PYG{p}{();}

\PYG{c+c1}{//Initialise pointers to relevant singleton ProliferativeTypes and Properties}
    \PYG{n}{boost}\PYG{o}{::}\PYG{n}{shared\PYGZus{}ptr}\PYG{o}{\PYGZlt{}}\PYG{n}{AbstractCellProperty}\PYG{o}{\PYGZgt{}} \PYG{n}{p\PYGZus{}state}\PYG{p}{(}\PYG{n}{CellPropertyRegistry}\PYG{o}{::}\PYG{n}{Instance}\PYG{p}{()}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{Get}\PYG{o}{\PYGZlt{}}\PYG{n}{WildTypeCellMutationState}\PYG{o}{\PYGZgt{}}\PYG{p}{());}
    \PYG{n}{boost}\PYG{o}{::}\PYG{n}{shared\PYGZus{}ptr}\PYG{o}{\PYGZlt{}}\PYG{n}{AbstractCellProperty}\PYG{o}{\PYGZgt{}} \PYG{n}{p\PYGZus{}Stem}\PYG{p}{(}\PYG{n}{CellPropertyRegistry}\PYG{o}{::}\PYG{n}{Instance}\PYG{p}{()}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{Get}\PYG{o}{\PYGZlt{}}\PYG{n}{StemCellProliferativeType}\PYG{o}{\PYGZgt{}}\PYG{p}{());}
    \PYG{n}{boost}\PYG{o}{::}\PYG{n}{shared\PYGZus{}ptr}\PYG{o}{\PYGZlt{}}\PYG{n}{AbstractCellProperty}\PYG{o}{\PYGZgt{}} \PYG{n}{p\PYGZus{}Transit}\PYG{p}{(}
            \PYG{n}{CellPropertyRegistry}\PYG{o}{::}\PYG{n}{Instance}\PYG{p}{()}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{Get}\PYG{o}{\PYGZlt{}}\PYG{n}{TransitCellProliferativeType}\PYG{o}{\PYGZgt{}}\PYG{p}{());}
    \PYG{n}{boost}\PYG{o}{::}\PYG{n}{shared\PYGZus{}ptr}\PYG{o}{\PYGZlt{}}\PYG{n}{AbstractCellProperty}\PYG{o}{\PYGZgt{}} \PYG{n}{p\PYGZus{}PostMitotic}\PYG{p}{(}
            \PYG{n}{CellPropertyRegistry}\PYG{o}{::}\PYG{n}{Instance}\PYG{p}{()}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{Get}\PYG{o}{\PYGZlt{}}\PYG{n}{DifferentiatedCellProliferativeType}\PYG{o}{\PYGZgt{}}\PYG{p}{());}

\PYG{c+c1}{//iterate through supplied seed range, executing one simulation per seed}
    \PYG{k}{for} \PYG{p}{(}\PYG{k+kt}{unsigned} \PYG{n}{seed} \PYG{o}{=} \PYG{n}{startSeed}\PYG{p}{;} \PYG{n}{seed} \PYG{o}{\PYGZlt{}=} \PYG{n}{endSeed}\PYG{p}{;} \PYG{n}{seed}\PYG{o}{++}\PYG{p}{)}
    \PYG{p}{\PYGZob{}}
        \PYG{c+c1}{//initialise SimulationTime (permits cellcyclemodel setup)}
        \PYG{n}{SimulationTime}\PYG{o}{::}\PYG{n}{Instance}\PYG{p}{()}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{SetStartTime}\PYG{p}{(}\PYG{l+m+mf}{0.0}\PYG{p}{);}

        \PYG{c+c1}{//Reseed the RNG with the required seed}
        \PYG{n}{p\PYGZus{}RNG}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{Reseed}\PYG{p}{(}\PYG{n}{seed}\PYG{p}{);}

        \PYG{c+c1}{//unsigned numberStem = int(std::round(p\PYGZus{}RNG\PYGZhy{}\PYGZgt{}NormalRandomDeviate(stemMean, stemStd)));}
        \PYG{k+kt}{unsigned} \PYG{n}{numberProgenitors} \PYG{o}{=} \PYG{k+kt}{int}\PYG{p}{(}\PYG{n}{std}\PYG{o}{::}\PYG{n}{round}\PYG{p}{(}\PYG{n}{p\PYGZus{}RNG}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{NormalRandomDeviate}\PYG{p}{(}\PYG{n}{progenitorMean}\PYG{p}{,} \PYG{n}{progenitorStd}\PYG{p}{)));}
        \PYG{k+kt}{unsigned} \PYG{n}{numberStem} \PYG{o}{=} \PYG{k+kt}{int}\PYG{p}{(}\PYG{n}{std}\PYG{o}{::}\PYG{n}{round}\PYG{p}{(}\PYG{n}{numberProgenitors} \PYG{o}{/} \PYG{n}{stemDivisor}\PYG{p}{));}

        \PYG{n}{std}\PYG{o}{::}\PYG{n}{vector}\PYG{o}{\PYGZlt{}}\PYG{n}{CellPtr}\PYG{o}{\PYGZgt{}} \PYG{n}{stems}\PYG{p}{;}
        \PYG{n}{std}\PYG{o}{::}\PYG{n}{vector}\PYG{o}{\PYGZlt{}}\PYG{n}{CellPtr}\PYG{o}{\PYGZgt{}} \PYG{n}{cells}\PYG{p}{;}

        \PYG{k}{for} \PYG{p}{(}\PYG{k+kt}{unsigned} \PYG{n}{i} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;} \PYG{n}{i} \PYG{o}{\PYGZlt{}} \PYG{n}{numberStem}\PYG{p}{;} \PYG{n}{i}\PYG{o}{++}\PYG{p}{)}
        \PYG{p}{\PYGZob{}}
            \PYG{n}{WanStemCellCycleModel}\PYG{o}{*} \PYG{n}{p\PYGZus{}stem\PYGZus{}model} \PYG{o}{=} \PYG{k}{new} \PYG{n}{WanStemCellCycleModel}\PYG{p}{;}
            \PYG{n}{p\PYGZus{}stem\PYGZus{}model}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{SetDimension}\PYG{p}{(}\PYG{l+m+mi}{2}\PYG{p}{);}
            \PYG{n}{p\PYGZus{}stem\PYGZus{}model}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{SetModelParameters}\PYG{p}{(}\PYG{n}{stemGammaShift}\PYG{p}{,} \PYG{n}{stemGammaShape}\PYG{p}{,} \PYG{n}{stemGammaScale}\PYG{p}{,} \PYG{n}{stemOffspringParams}\PYG{p}{);}

            \PYG{n}{CellPtr} \PYG{n}{p\PYGZus{}cell}\PYG{p}{(}\PYG{k}{new} \PYG{n}{Cell}\PYG{p}{(}\PYG{n}{p\PYGZus{}state}\PYG{p}{,} \PYG{n}{p\PYGZus{}stem\PYGZus{}model}\PYG{p}{));}
            \PYG{n}{p\PYGZus{}cell}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{InitialiseCellCycleModel}\PYG{p}{();}
            \PYG{n}{stems}\PYG{p}{.}\PYG{n}{push\PYGZus{}back}\PYG{p}{(}\PYG{n}{p\PYGZus{}cell}\PYG{p}{);}
            \PYG{n}{cells}\PYG{p}{.}\PYG{n}{push\PYGZus{}back}\PYG{p}{(}\PYG{n}{p\PYGZus{}cell}\PYG{p}{);}
        \PYG{p}{\PYGZcb{}}

        \PYG{k}{for} \PYG{p}{(}\PYG{k+kt}{unsigned} \PYG{n}{i} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;} \PYG{n}{i} \PYG{o}{\PYGZlt{}} \PYG{n}{numberProgenitors}\PYG{p}{;} \PYG{n}{i}\PYG{o}{++}\PYG{p}{)}
        \PYG{p}{\PYGZob{}}
            \PYG{k+kt}{double} \PYG{n}{currTiL} \PYG{o}{=} \PYG{n}{p\PYGZus{}RNG}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{ranf}\PYG{p}{()} \PYG{o}{*} \PYG{n}{cmzResidencyTime}\PYG{p}{;}

            \PYG{n}{HeCellCycleModel}\PYG{o}{*} \PYG{n}{p\PYGZus{}prog\PYGZus{}model} \PYG{o}{=} \PYG{k}{new} \PYG{n}{HeCellCycleModel}\PYG{p}{;}
            \PYG{n}{p\PYGZus{}prog\PYGZus{}model}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{SetDimension}\PYG{p}{(}\PYG{l+m+mi}{2}\PYG{p}{);}
            \PYG{n}{p\PYGZus{}prog\PYGZus{}model}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{SetModelParameters}\PYG{p}{(}\PYG{n}{currTiL}\PYG{p}{,} \PYG{n}{mitoticModePhase2}\PYG{p}{,} \PYG{n}{mitoticModePhase2} \PYG{o}{+} \PYG{n}{mitoticModePhase3}\PYG{p}{,} \PYG{n}{pPP1}\PYG{p}{,}
                                             \PYG{n}{pPD1}\PYG{p}{,} \PYG{n}{pPP2}\PYG{p}{,} \PYG{n}{pPD2}\PYG{p}{,} \PYG{n}{pPP3}\PYG{p}{,} \PYG{n}{pPD3}\PYG{p}{);}
            \PYG{n}{p\PYGZus{}prog\PYGZus{}model}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{EnableKillSpecified}\PYG{p}{();}

            \PYG{n}{CellPtr} \PYG{n}{p\PYGZus{}cell}\PYG{p}{(}\PYG{k}{new} \PYG{n}{Cell}\PYG{p}{(}\PYG{n}{p\PYGZus{}state}\PYG{p}{,} \PYG{n}{p\PYGZus{}prog\PYGZus{}model}\PYG{p}{));}
            \PYG{n}{p\PYGZus{}cell}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{InitialiseCellCycleModel}\PYG{p}{();}
            \PYG{n}{cells}\PYG{p}{.}\PYG{n}{push\PYGZus{}back}\PYG{p}{(}\PYG{n}{p\PYGZus{}cell}\PYG{p}{);}
        \PYG{p}{\PYGZcb{}}

        \PYG{c+c1}{//Generate 1x\PYGZsh{}cells mesh for abstract colony}
        \PYG{n}{HoneycombMeshGenerator} \PYG{n}{generator}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{,} \PYG{p}{(}\PYG{n}{numberProgenitors} \PYG{o}{+} \PYG{n}{numberStem}\PYG{p}{));}
        \PYG{n}{MutableMesh}\PYG{o}{\PYGZlt{}}\PYG{l+m+mi}{2}\PYG{p}{,} \PYG{l+m+mi}{2}\PYG{o}{\PYGZgt{}*} \PYG{n}{p\PYGZus{}generating\PYGZus{}mesh} \PYG{o}{=} \PYG{n}{generator}\PYG{p}{.}\PYG{n}{GetMesh}\PYG{p}{();}
        \PYG{n}{NodesOnlyMesh}\PYG{o}{\PYGZlt{}}\PYG{l+m+mi}{2}\PYG{o}{\PYGZgt{}} \PYG{n}{mesh}\PYG{p}{;}
        \PYG{n}{mesh}\PYG{p}{.}\PYG{n}{ConstructNodesWithoutMesh}\PYG{p}{(}\PYG{o}{*}\PYG{n}{p\PYGZus{}generating\PYGZus{}mesh}\PYG{p}{,} \PYG{l+m+mf}{1.5}\PYG{p}{);}

        \PYG{c+c1}{//Setup cell population}
        \PYG{n}{boost}\PYG{o}{::}\PYG{n}{shared\PYGZus{}ptr}\PYG{o}{\PYGZlt{}}\PYG{n}{NodeBasedCellPopulation}\PYG{o}{\PYGZlt{}}\PYG{l+m+mi}{2}\PYG{o}{\PYGZgt{}\PYGZgt{}} \PYG{n}{cell\PYGZus{}population}\PYG{p}{(}\PYG{k}{new} \PYG{n}{NodeBasedCellPopulation}\PYG{o}{\PYGZlt{}}\PYG{l+m+mi}{2}\PYG{o}{\PYGZgt{}}\PYG{p}{(}\PYG{n}{mesh}\PYG{p}{,} \PYG{n}{cells}\PYG{p}{));}
        \PYG{n}{cell\PYGZus{}population}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{AddCellPopulationCountWriter}\PYG{o}{\PYGZlt{}}\PYG{n}{CellProliferativeTypesCountWriter}\PYG{o}{\PYGZgt{}}\PYG{p}{();}

        \PYG{c+c1}{//Give Wan stem cells the population \PYGZam{} base stem pop size}
        \PYG{k}{for} \PYG{p}{(}\PYG{k}{auto} \PYG{n+nl}{p\PYGZus{}cell} \PYG{p}{:} \PYG{n}{stems}\PYG{p}{)}
        \PYG{p}{\PYGZob{}}
            \PYG{n}{WanStemCellCycleModel}\PYG{o}{*} \PYG{n}{p\PYGZus{}cycle\PYGZus{}model} \PYG{o}{=} \PYG{k}{dynamic\PYGZus{}cast}\PYG{o}{\PYGZlt{}}\PYG{n}{WanStemCellCycleModel}\PYG{o}{*\PYGZgt{}}\PYG{p}{(}\PYG{n}{p\PYGZus{}cell}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{GetCellCycleModel}\PYG{p}{());}
            \PYG{n}{p\PYGZus{}cycle\PYGZus{}model}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{EnableExpandingStemPopulation}\PYG{p}{(}\PYG{n}{numberStem}\PYG{p}{,} \PYG{n}{cell\PYGZus{}population}\PYG{p}{);}
        \PYG{p}{\PYGZcb{}}

        \PYG{c+c1}{//Setup simulator \PYGZam{} run simulation}
        \PYG{n}{boost}\PYG{o}{::}\PYG{n}{shared\PYGZus{}ptr}\PYG{o}{\PYGZlt{}}\PYG{n}{OffLatticeSimulationPropertyStop}\PYG{o}{\PYGZlt{}}\PYG{l+m+mi}{2}\PYG{o}{\PYGZgt{}\PYGZgt{}} \PYG{n}{p\PYGZus{}simulator}\PYG{p}{(}
                \PYG{k}{new} \PYG{n}{OffLatticeSimulationPropertyStop}\PYG{o}{\PYGZlt{}}\PYG{l+m+mi}{2}\PYG{o}{\PYGZgt{}}\PYG{p}{(}\PYG{o}{*}\PYG{n}{cell\PYGZus{}population}\PYG{p}{));}
        \PYG{n}{p\PYGZus{}simulator}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{SetStopProperty}\PYG{p}{(}\PYG{n}{p\PYGZus{}Transit}\PYG{p}{);} \PYG{c+c1}{//simulation to stop if no RPCs are left}
        \PYG{n}{p\PYGZus{}simulator}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{SetDt}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{);}
        \PYG{n}{p\PYGZus{}simulator}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{SetOutputDirectory}\PYG{p}{(}\PYG{n}{directoryString} \PYG{o}{+} \PYG{l+s}{\PYGZdq{}/Seed\PYGZdq{}} \PYG{o}{+} \PYG{n}{std}\PYG{o}{::}\PYG{n}{to\PYGZus{}string}\PYG{p}{(}\PYG{n}{seed}\PYG{p}{)} \PYG{o}{+} \PYG{l+s}{\PYGZdq{}Results\PYGZdq{}}\PYG{p}{);}
        \PYG{n}{p\PYGZus{}simulator}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{SetEndTime}\PYG{p}{(}\PYG{l+m+mi}{8568}\PYG{p}{);} \PYG{c+c1}{// 360dpf \PYGZhy{} 3dpf simulation start time}
        \PYG{n}{p\PYGZus{}simulator}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{Solve}\PYG{p}{();}

        \PYG{c+c1}{//Reset for next simulation}
        \PYG{n}{SimulationTime}\PYG{o}{::}\PYG{n}{Destroy}\PYG{p}{();}
        \PYG{n}{cell\PYGZus{}population}\PYG{p}{.}\PYG{n}{reset}\PYG{p}{();}
    \PYG{p}{\PYGZcb{}}

    \PYG{n}{p\PYGZus{}RNG}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{Destroy}\PYG{p}{();}

    \PYG{k}{return} \PYG{n}{exit\PYGZus{}code}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}
\PYG{p}{;}
\end{Verbatim}
