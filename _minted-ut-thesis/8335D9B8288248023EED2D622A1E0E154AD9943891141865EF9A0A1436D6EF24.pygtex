\begin{Verbatim}[commandchars=\\\{\},codes={\catcode`\$=3\catcode`\^=7\catcode`\_=8}]
\PYG{c}{\PYGZsh{}function to setup an BHMM chains dictionary and RemoteChannel for learning jobs, given a vector of state \PYGZsh{}s, order\PYGZus{}nos, replicates to train, the dictionary to fill, the RemoteChannel and the training sequences}
\PYG{c}{\PYGZsh{}resumes any existing non\PYGZhy{}converged chains, otherwise initialises hmms for new chains given provided constants}
\PYG{k}{function} \PYG{n}{setup\PYGZus{}EM\PYGZus{}jobs!}\PYG{p}{(}\PYG{n}{job\PYGZus{}ids}\PYG{o}{::}\PYG{k+kt}{Vector}\PYG{p}{\PYGZob{}}\PYG{n}{Chain\PYGZus{}ID}\PYG{p}{\PYGZcb{},} \PYG{n}{obs\PYGZus{}sets}\PYG{o}{::}\PYG{k+kt}{Dict}\PYG{p}{\PYGZob{}}\PYG{n}{String}\PYG{p}{,}\PYG{k+kt}{Vector}\PYG{p}{\PYGZob{}}\PYG{n}{LongSequence}\PYG{p}{\PYGZob{}}\PYG{n}{DNAAlphabet}\PYG{p}{\PYGZob{}}\PYG{l+m+mi}{2}\PYG{p}{\PYGZcb{}\PYGZcb{}\PYGZcb{}\PYGZcb{};} \PYG{n}{delta\PYGZus{}thresh}\PYG{o}{::}\PYG{k+kt}{Float64}\PYG{o}{=}\PYG{l+m+mf}{1e\PYGZhy{}3}\PYG{p}{,}  \PYG{n}{chains}\PYG{o}{::}\PYG{k+kt}{Dict}\PYG{p}{\PYGZob{}}\PYG{n}{Chain\PYGZus{}ID}\PYG{p}{,}\PYG{k+kt}{Vector}\PYG{p}{\PYGZob{}}\PYG{n}{EM\PYGZus{}step}\PYG{p}{\PYGZcb{}\PYGZcb{}}\PYG{o}{=}\PYG{k+kt}{Dict}\PYG{p}{\PYGZob{}}\PYG{n}{Chain\PYGZus{}ID}\PYG{p}{,}\PYG{k+kt}{Vector}\PYG{p}{\PYGZob{}}\PYG{n}{EM\PYGZus{}step}\PYG{p}{\PYGZcb{}\PYGZcb{}(),} \PYG{n}{init\PYGZus{}function}\PYG{o}{::}\PYG{k+kt}{Function}\PYG{o}{=}\PYG{n}{autotransition\PYGZus{}init}\PYG{p}{)}
    \PYG{c}{\PYGZsh{}argument checking}
    \PYG{n}{length}\PYG{p}{(}\PYG{n}{job\PYGZus{}ids}\PYG{p}{)} \PYG{o}{\PYGZlt{}} \PYG{l+m+mi}{1} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{n}{throw}\PYG{p}{(}\PYG{k+kt}{ArgumentError}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Empty job id vector!\PYGZdq{}}\PYG{p}{))}
    \PYG{n}{length}\PYG{p}{(}\PYG{n}{obs\PYGZus{}sets}\PYG{p}{)} \PYG{o}{\PYGZlt{}} \PYG{l+m+mi}{1} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{n}{throw}\PYG{p}{(}\PYG{k+kt}{ArgumentError}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Empty observation sets!\PYGZdq{}}\PYG{p}{))}

    \PYG{n}{no\PYGZus{}input\PYGZus{}hmms} \PYG{o}{=} \PYG{n}{length}\PYG{p}{(}\PYG{n}{job\PYGZus{}ids}\PYG{p}{)}
    \PYG{n}{input\PYGZus{}channel}\PYG{o}{=} \PYG{n}{RemoteChannel}\PYG{p}{(()}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{k+kt}{Channel}\PYG{p}{\PYGZob{}}\PYG{k+kt}{Tuple}\PYG{p}{\PYGZcb{}(}\PYG{n}{no\PYGZus{}input\PYGZus{}hmms}\PYG{o}{*}\PYG{l+m+mi}{3}\PYG{p}{))} \PYG{c}{\PYGZsh{}channel to hold BHMM learning jobs}
    \PYG{n}{output\PYGZus{}channel}\PYG{o}{=} \PYG{n}{RemoteChannel}\PYG{p}{(()}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{k+kt}{Channel}\PYG{p}{\PYGZob{}}\PYG{k+kt}{Tuple}\PYG{p}{\PYGZcb{}(}\PYG{n+nb}{Inf}\PYG{p}{))} \PYG{c}{\PYGZsh{}channel to take EM iterates off of}

    \PYG{n}{code\PYGZus{}dict} \PYG{o}{=} \PYG{n}{code\PYGZus{}job\PYGZus{}obs}\PYG{p}{(}\PYG{n}{job\PYGZus{}ids}\PYG{p}{,} \PYG{n}{obs\PYGZus{}sets}\PYG{p}{)}

    \PYG{n+nd}{@showprogress} \PYG{l+m+mi}{1} \PYG{l+s}{\PYGZdq{}Setting up HMMs...\PYGZdq{}} \PYG{k}{for} \PYG{n}{id} \PYG{k+kp}{in} \PYG{n}{job\PYGZus{}ids} \PYG{c}{\PYGZsh{}for each jobid, add an initial BHMM to input\PYGZus{}channel for EM\PYGZus{}workers}
        \PYG{k}{if} \PYG{n}{haskey}\PYG{p}{(}\PYG{n}{chains}\PYG{p}{,} \PYG{n}{id}\PYG{p}{)} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{n}{length}\PYG{p}{(}\PYG{n}{chains}\PYG{p}{[}\PYG{n}{id}\PYG{p}{])} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{0} \PYG{c}{\PYGZsh{}true if resuming from incomplete chain}
            \PYG{n}{chain\PYGZus{}end}\PYG{o}{=}\PYG{n}{chains}\PYG{p}{[}\PYG{n}{id}\PYG{p}{][}\PYG{k}{end}\PYG{p}{]}
            \PYG{k}{if} \PYG{o}{!}\PYG{n}{chain\PYGZus{}end}\PYG{o}{.}\PYG{n}{converged} \PYG{o}{||} \PYG{p}{(}\PYG{n}{chain\PYGZus{}end}\PYG{o}{.}\PYG{n}{converged} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{n}{chain\PYGZus{}end}\PYG{o}{.}\PYG{n}{delta} \PYG{o}{\PYGZgt{}} \PYG{n}{delta\PYGZus{}thresh}\PYG{p}{)}\PYG{c}{\PYGZsh{}push the last hmm iterate for nonconverged chains to the input channel with coded observations and values for chain resumption}
                \PYG{n}{put!}\PYG{p}{(}\PYG{n}{input\PYGZus{}channel}\PYG{p}{,} \PYG{p}{(}\PYG{n}{id}\PYG{p}{,} \PYG{n}{chain\PYGZus{}end}\PYG{o}{.}\PYG{n}{iterate}\PYG{p}{,} \PYG{n}{chain\PYGZus{}end}\PYG{o}{.}\PYG{n}{hmm}\PYG{p}{,} \PYG{n}{chain\PYGZus{}end}\PYG{o}{.}\PYG{n}{log\PYGZus{}p}\PYG{p}{,} \PYG{n}{code\PYGZus{}dict}\PYG{p}{[(}\PYG{n}{id}\PYG{o}{.}\PYG{n}{obs\PYGZus{}id}\PYG{p}{,} \PYG{n}{id}\PYG{o}{.}\PYG{n}{order}\PYG{p}{)]))}
            \PYG{k}{else} \PYG{c}{\PYGZsh{}skip any jobs that have converged from previous runs}
                \PYG{n}{no\PYGZus{}input\PYGZus{}hmms} \PYG{o}{\PYGZhy{}=} \PYG{l+m+mi}{1}
            \PYG{k}{end}

        \PYG{k}{else} 
            \PYG{n}{hmm} \PYG{o}{=} \PYG{n}{init\PYGZus{}function}\PYG{p}{(}\PYG{n}{id}\PYG{o}{.}\PYG{n}{K}\PYG{p}{,} \PYG{n}{id}\PYG{o}{.}\PYG{n}{order}\PYG{p}{,} \PYG{n}{id}\PYG{o}{.}\PYG{n}{obs\PYGZus{}id}\PYG{p}{)} \PYG{c}{\PYGZsh{}initialise first BHMM in chain}
            \PYG{n}{chains}\PYG{p}{[}\PYG{n}{id}\PYG{p}{]} \PYG{o}{=} \PYG{k+kt}{Vector}\PYG{p}{\PYGZob{}}\PYG{n}{EM\PYGZus{}step}\PYG{p}{\PYGZcb{}()} \PYG{c}{\PYGZsh{}initialise the relevant chain}
            \PYG{n}{obs}\PYG{o}{=}\PYG{n}{code\PYGZus{}dict}\PYG{p}{[(}\PYG{n}{id}\PYG{o}{.}\PYG{n}{obs\PYGZus{}id}\PYG{p}{,}\PYG{n}{id}\PYG{o}{.}\PYG{n}{order}\PYG{p}{)]}
            \PYG{n}{lh}\PYG{o}{=}\PYG{n}{obs\PYGZus{}lh\PYGZus{}given\PYGZus{}hmm}\PYG{p}{(}\PYG{n}{obs}\PYG{p}{,}\PYG{n}{hmm}\PYG{p}{,}\PYG{n}{linear}\PYG{o}{=}\PYG{k+kc}{false}\PYG{p}{)}
            \PYG{n}{put!}\PYG{p}{(}\PYG{n}{input\PYGZus{}channel}\PYG{p}{,} \PYG{p}{(}\PYG{n}{id}\PYG{p}{,} \PYG{l+m+mi}{1}\PYG{p}{,} \PYG{n}{hmm}\PYG{p}{,} \PYG{n}{lh}\PYG{p}{,} \PYG{n}{obs}\PYG{p}{))} 
        \PYG{k}{end}
    \PYG{k}{end}
    \PYG{k}{return} \PYG{n}{no\PYGZus{}input\PYGZus{}hmms}\PYG{p}{,} \PYG{n}{chains}\PYG{p}{,} \PYG{n}{input\PYGZus{}channel}\PYG{p}{,} \PYG{n}{output\PYGZus{}channel}
\PYG{k}{end}

\PYG{k}{function} \PYG{n}{execute\PYGZus{}EM\PYGZus{}jobs!}\PYG{p}{(}\PYG{n}{worker\PYGZus{}pool}\PYG{o}{::}\PYG{k+kt}{Vector}\PYG{p}{\PYGZob{}}\PYG{k+kt}{Int64}\PYG{p}{\PYGZcb{},} \PYG{n}{no\PYGZus{}input\PYGZus{}hmms}\PYG{o}{::}\PYG{k+kt}{Integer}\PYG{p}{,} \PYG{n}{chains}\PYG{o}{::}\PYG{k+kt}{Dict}\PYG{p}{\PYGZob{}}\PYG{n}{Chain\PYGZus{}ID}\PYG{p}{,}\PYG{k+kt}{Vector}\PYG{p}{\PYGZob{}}\PYG{n}{EM\PYGZus{}step}\PYG{p}{\PYGZcb{}\PYGZcb{},}  \PYG{n}{input\PYGZus{}channel}\PYG{o}{::}\PYG{n}{RemoteChannel}\PYG{p}{,} \PYG{n}{output\PYGZus{}channel}\PYG{o}{::}\PYG{n}{RemoteChannel}\PYG{p}{,} \PYG{n}{chains\PYGZus{}path}\PYG{o}{::}\PYG{n}{String}\PYG{p}{;} \PYG{n}{load\PYGZus{}dict}\PYG{o}{=}\PYG{k+kt}{Dict}\PYG{p}{\PYGZob{}}\PYG{k+kt}{Int64}\PYG{p}{,}\PYG{n}{LoadConfig}\PYG{p}{\PYGZcb{}(),} \PYG{n}{EM\PYGZus{}func}\PYG{o}{::}\PYG{k+kt}{Function}\PYG{o}{=}\PYG{n}{linear\PYGZus{}step}\PYG{p}{,} \PYG{n}{delta\PYGZus{}thresh}\PYG{o}{=}\PYG{l+m+mf}{1e\PYGZhy{}3}\PYG{p}{,} \PYG{n}{max\PYGZus{}iterates}\PYG{o}{=}\PYG{l+m+mi}{5000}\PYG{p}{,} \PYG{n}{verbose}\PYG{o}{=}\PYG{k+kc}{false}\PYG{p}{)}
    \PYG{c}{\PYGZsh{}argument checking}
    \PYG{n}{length}\PYG{p}{(}\PYG{n}{worker\PYGZus{}pool}\PYG{p}{)} \PYG{o}{\PYGZlt{}} \PYG{l+m+mi}{1} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{n}{throw}\PYG{p}{(}\PYG{k+kt}{ArgumentError}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Worker pool must contain one or more worker IDs!\PYGZdq{}}\PYG{p}{))}
    \PYG{n}{no\PYGZus{}input\PYGZus{}hmms} \PYG{o}{\PYGZlt{}} \PYG{l+m+mi}{1} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{n}{throw}\PYG{p}{(}\PYG{k+kt}{ArgumentError}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Zero input HMMs reported, likely continuing from chains already converged beyond default delta\PYGZus{}thresh for setup\PYGZus{}EM\PYGZus{}jobs\PYGZdq{}}\PYG{p}{))}
    \PYG{n}{length}\PYG{p}{(}\PYG{n}{chains}\PYG{p}{)} \PYG{o}{\PYGZlt{}} \PYG{l+m+mi}{1} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{n}{throw}\PYG{p}{(}\PYG{k+kt}{ArgumentError}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}No chains supplied, likely job set from setup\PYGZus{}EM\PYGZus{}jobs passed incorrectly\PYGZdq{}}\PYG{p}{))}
    \PYG{o}{!}\PYG{n}{isready}\PYG{p}{(}\PYG{n}{input\PYGZus{}channel}\PYG{p}{)} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{n}{throw}\PYG{p}{(}\PYG{k+kt}{ArgumentError}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}BHMM input channel has no contents, likely job set from setup\PYGZus{}EM\PYGZus{}jobs already executed\PYGZdq{}}\PYG{p}{))}

    \PYG{c}{\PYGZsh{}SEND BHMM FIT JOBS TO WORKERS}
    \PYG{k}{if} \PYG{n}{isready}\PYG{p}{(}\PYG{n}{input\PYGZus{}channel}\PYG{p}{)} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{0}
        \PYG{n+nd}{@info} \PYG{l+s}{\PYGZdq{}Fitting HMMs..\PYGZdq{}}
        \PYG{c}{\PYGZsh{}WORKERS FIT HMMS}
        \PYG{k}{for} \PYG{n}{worker} \PYG{k+kp}{in} \PYG{n}{worker\PYGZus{}pool}
            \PYG{k}{if} \PYG{n}{worker} \PYG{k+kp}{in} \PYG{n}{keys}\PYG{p}{(}\PYG{n}{load\PYGZus{}dict}\PYG{p}{)}
                \PYG{n}{remote\PYGZus{}do}\PYG{p}{(}\PYG{n}{EM\PYGZus{}converge!}\PYG{p}{,} \PYG{n}{worker}\PYG{p}{,} \PYG{n}{input\PYGZus{}channel}\PYG{p}{,} \PYG{n}{output\PYGZus{}channel}\PYG{p}{,} \PYG{n}{no\PYGZus{}input\PYGZus{}hmms}\PYG{p}{,} \PYG{n}{load\PYGZus{}config}\PYG{o}{=}\PYG{n}{load\PYGZus{}dict}\PYG{p}{[}\PYG{n}{worker}\PYG{p}{],} \PYG{n}{EM\PYGZus{}func}\PYG{o}{=}\PYG{n}{EM\PYGZus{}func}\PYG{p}{,} \PYG{n}{delta\PYGZus{}thresh}\PYG{o}{=}\PYG{n}{delta\PYGZus{}thresh}\PYG{p}{,} \PYG{n}{max\PYGZus{}iterates}\PYG{o}{=}\PYG{n}{max\PYGZus{}iterates}\PYG{p}{,} \PYG{n}{verbose}\PYG{o}{=}\PYG{n}{verbose}\PYG{p}{)}
            \PYG{k}{else}
                \PYG{n}{remote\PYGZus{}do}\PYG{p}{(}\PYG{n}{EM\PYGZus{}converge!}\PYG{p}{,} \PYG{n}{worker}\PYG{p}{,} \PYG{n}{input\PYGZus{}channel}\PYG{p}{,} \PYG{n}{output\PYGZus{}channel}\PYG{p}{,} \PYG{n}{no\PYGZus{}input\PYGZus{}hmms}\PYG{p}{,} \PYG{n}{EM\PYGZus{}func}\PYG{o}{=}\PYG{n}{EM\PYGZus{}func}\PYG{p}{,} \PYG{n}{delta\PYGZus{}thresh}\PYG{o}{=}\PYG{n}{delta\PYGZus{}thresh}\PYG{p}{,} \PYG{n}{max\PYGZus{}iterates}\PYG{o}{=}\PYG{n}{max\PYGZus{}iterates}\PYG{p}{,} \PYG{n}{verbose}\PYG{o}{=}\PYG{n}{verbose}\PYG{p}{)}
            \PYG{k}{end}
        \PYG{k}{end}
    \PYG{k}{else}
        \PYG{n+nd}{@warn} \PYG{l+s}{\PYGZdq{}No input HMMs (all already converged?), skipping fitting..\PYGZdq{}}
    \PYG{k}{end}

    \PYG{c}{\PYGZsh{}GET LEARNT HMMS OFF REMOTECHANNEL, SERIALISE AT EVERY ITERATION, UPDATE PROGRESS METERS}
    \PYG{n}{job\PYGZus{}counter}\PYG{o}{=}\PYG{n}{no\PYGZus{}input\PYGZus{}hmms}
    \PYG{n}{learning\PYGZus{}meters}\PYG{o}{=}\PYG{k+kt}{Dict}\PYG{p}{\PYGZob{}}\PYG{n}{Chain\PYGZus{}ID}\PYG{p}{,} \PYG{n}{ProgressHMM}\PYG{p}{\PYGZcb{}()}
    \PYG{n}{overall\PYGZus{}meter}\PYG{o}{=}\PYG{n}{Progress}\PYG{p}{(}\PYG{n}{no\PYGZus{}input\PYGZus{}hmms}\PYG{p}{,}\PYG{l+s}{\PYGZdq{}Overall batch progress:\PYGZdq{}}\PYG{p}{)}

    \PYG{k}{while} \PYG{n}{job\PYGZus{}counter} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{0}
        \PYG{n}{wait}\PYG{p}{(}\PYG{n}{output\PYGZus{}channel}\PYG{p}{)}
        \PYG{n}{workerid}\PYG{p}{,} \PYG{n}{jobid}\PYG{p}{,} \PYG{n}{iterate}\PYG{p}{,} \PYG{n}{hmm}\PYG{p}{,} \PYG{n}{log\PYGZus{}p}\PYG{p}{,} \PYG{n}{delta}\PYG{p}{,} \PYG{n}{converged}\PYG{p}{,} \PYG{n}{steptime} \PYG{o}{=} \PYG{n}{take!}\PYG{p}{(}\PYG{n}{output\PYGZus{}channel}\PYG{p}{)}
        \PYG{c}{\PYGZsh{}either update an existing ProgressHMM meter or create a new one for the job}
        \PYG{k}{if} \PYG{n}{haskey}\PYG{p}{(}\PYG{n}{learning\PYGZus{}meters}\PYG{p}{,} \PYG{n}{jobid}\PYG{p}{)} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{n}{iterate} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{2}
                \PYG{n}{update!}\PYG{p}{(}\PYG{n}{learning\PYGZus{}meters}\PYG{p}{[}\PYG{n}{jobid}\PYG{p}{],} \PYG{n}{delta}\PYG{p}{,} \PYG{n}{steptime}\PYG{p}{)}
        \PYG{k}{else}
            \PYG{n}{offset} \PYG{o}{=} \PYG{n}{workerid} \PYG{o}{\PYGZhy{}} \PYG{l+m+mi}{1}
            \PYG{k}{if} \PYG{n}{iterate} \PYG{o}{\PYGZlt{}=}\PYG{l+m+mi}{2}
                \PYG{n}{learning\PYGZus{}meters}\PYG{p}{[}\PYG{n}{jobid}\PYG{p}{]} \PYG{o}{=} \PYG{n}{ProgressHMM}\PYG{p}{(}\PYG{n}{delta\PYGZus{}thresh}\PYG{p}{,} \PYG{l+s}{\PYGZdq{}}\PYG{l+s+si}{\PYGZdl{}jobid}\PYG{l+s}{ on Wk }\PYG{l+s+si}{\PYGZdl{}workerid}\PYG{l+s}{:\PYGZdq{}}\PYG{p}{,} \PYG{n}{offset}\PYG{p}{,} \PYG{l+m+mi}{2}\PYG{p}{)}
                \PYG{n}{update!}\PYG{p}{(}\PYG{n}{learning\PYGZus{}meters}\PYG{p}{[}\PYG{n}{jobid}\PYG{p}{],} \PYG{n}{delta}\PYG{p}{,} \PYG{n}{steptime}\PYG{p}{)}
            \PYG{k}{else}
                \PYG{n}{learning\PYGZus{}meters}\PYG{p}{[}\PYG{n}{jobid}\PYG{p}{]} \PYG{o}{=} \PYG{n}{ProgressHMM}\PYG{p}{(}\PYG{n}{delta\PYGZus{}thresh}\PYG{p}{,} \PYG{l+s}{\PYGZdq{}}\PYG{l+s+si}{\PYGZdl{}jobid}\PYG{l+s}{ on Wk }\PYG{l+s+si}{\PYGZdl{}workerid}\PYG{l+s}{:\PYGZdq{}}\PYG{p}{,} \PYG{n}{offset}\PYG{p}{,} \PYG{n}{iterate}\PYG{p}{)}
                \PYG{n}{update!}\PYG{p}{(}\PYG{n}{learning\PYGZus{}meters}\PYG{p}{[}\PYG{n}{jobid}\PYG{p}{],} \PYG{n}{delta}\PYG{p}{,} \PYG{n}{steptime}\PYG{p}{)}
            \PYG{k}{end}
        \PYG{k}{end}
        \PYG{c}{\PYGZsh{}push the hmm and related params to the results\PYGZus{}dict}
        \PYG{n}{push!}\PYG{p}{(}\PYG{n}{chains}\PYG{p}{[}\PYG{n}{jobid}\PYG{p}{],} \PYG{n}{EM\PYGZus{}step}\PYG{p}{(}\PYG{n}{iterate}\PYG{p}{,} \PYG{n}{hmm}\PYG{p}{,} \PYG{n}{log\PYGZus{}p}\PYG{p}{,} \PYG{n}{delta}\PYG{p}{,} \PYG{n}{converged}\PYG{p}{))}
        \PYG{c}{\PYGZsh{}try to serialize the results; catch interrupts and other errors to prevent corruption}
        \PYG{k}{try}
            \PYG{n}{serialize}\PYG{p}{(}\PYG{n}{chains\PYGZus{}path}\PYG{p}{,} \PYG{n}{chains}\PYG{p}{)}
        \PYG{k}{catch} \PYG{n+nb}{e}
            \PYG{n+nd}{@warn} \PYG{l+s}{\PYGZdq{}Serializing failed!\PYGZdq{}}
            \PYG{n}{println}\PYG{p}{(}\PYG{n+nb}{e}\PYG{p}{)}
        \PYG{k}{end}
       
        \PYG{c}{\PYGZsh{}decrement the job counter, update overall progress meter, and save the current results dict on convergence or max iterate}
        \PYG{k}{if} \PYG{n}{converged} \PYG{o}{||} \PYG{n}{iterate} \PYG{o}{==} \PYG{n}{max\PYGZus{}iterates}
            \PYG{n}{job\PYGZus{}counter} \PYG{o}{\PYGZhy{}=} \PYG{l+m+mi}{1}
            \PYG{n}{ProgressMeter}\PYG{o}{.}\PYG{n}{update!}\PYG{p}{(}\PYG{n}{overall\PYGZus{}meter}\PYG{p}{,} \PYG{p}{(}\PYG{n}{no\PYGZus{}input\PYGZus{}hmms}\PYG{o}{\PYGZhy{}}\PYG{n}{job\PYGZus{}counter}\PYG{p}{))}
            \PYG{k}{if} \PYG{o}{!}\PYG{n}{isready}\PYG{p}{(}\PYG{n}{input\PYGZus{}channel}\PYG{p}{)} \PYG{c}{\PYGZsh{}if there are no more jobs to be learnt, retire the worker}
                \PYG{n}{workerid!}\PYG{o}{=}\PYG{l+m+mi}{1} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{n}{rmprocs}\PYG{p}{(}\PYG{n}{workerid}\PYG{p}{)}
            \PYG{k}{end}
        \PYG{k}{end}
    \PYG{k}{end}

    \PYG{c}{\PYGZsh{}count converged \PYGZam{} unconverged jobs, report results}
    \PYG{n}{converged\PYGZus{}counter} \PYG{o}{=} \PYG{l+m+mi}{0}
    \PYG{n}{unconverged\PYGZus{}counter} \PYG{o}{=} \PYG{l+m+mi}{0}
    \PYG{k}{for} \PYG{p}{(}\PYG{n}{id}\PYG{p}{,} \PYG{n}{chain}\PYG{p}{)} \PYG{k+kp}{in} \PYG{n}{chains}
        \PYG{n}{chain}\PYG{p}{[}\PYG{k}{end}\PYG{p}{]}\PYG{o}{.}\PYG{n}{converged} \PYG{o}{==} \PYG{k+kc}{true} \PYG{o}{?} \PYG{p}{(}\PYG{n}{converged\PYGZus{}counter} \PYG{o}{+=} \PYG{l+m+mi}{1}\PYG{p}{)} \PYG{o}{:} \PYG{p}{(}\PYG{n}{unconverged\PYGZus{}counter} \PYG{o}{+=} \PYG{l+m+mi}{1}\PYG{p}{)}
    \PYG{k}{end}

    \PYG{n+nd}{@info} \PYG{l+s}{\PYGZdq{}Background HMM batch learning task complete, }\PYG{l+s+si}{\PYGZdl{}converged\PYGZus{}counter}\PYG{l+s}{ converged jobs, }\PYG{l+s+si}{\PYGZdl{}unconverged\PYGZus{}counter}\PYG{l+s}{ jobs failed to converge in }\PYG{l+s+si}{\PYGZdl{}max\PYGZus{}iterates}\PYG{l+s}{ iterates since job start.\PYGZdq{}}
\PYG{k}{end}
\end{Verbatim}
