\begin{Verbatim}[commandchars=\\\{\},codes={\catcode`\$=3\catcode`\^=7\catcode`\_=8}]
\PYG{k+kn}{import} \PYG{n+nn}{multiprocessing}
\PYG{k+kn}{import} \PYG{n+nn}{os}
\PYG{k+kn}{import} \PYG{n+nn}{subprocess}
\PYG{k+kn}{import} \PYG{n+nn}{datetime}

\PYG{k+kn}{import} \PYG{n+nn}{numpy} \PYG{k+kn}{as} \PYG{n+nn}{np}
\PYG{k+kn}{from} \PYG{n+nn}{openpyxl.styles.builtins} \PYG{k+kn}{import} \PYG{n}{output}
\PYG{k+kn}{from} \PYG{n+nn}{sklearn.datasets.tests.test\PYGZus{}svmlight\PYGZus{}format} \PYG{k+kn}{import} \PYG{n}{currdir}

\PYG{n}{executable} \PYG{o}{=} \PYG{l+s+s1}{\PYGZsq{}/home/main/chaste\PYGZus{}build/projects/ISP/apps/WanSimulator\PYGZsq{}}

\PYG{k}{if} \PYG{o+ow}{not}\PYG{p}{(}\PYG{n}{os}\PYG{o}{.}\PYG{n}{path}\PYG{o}{.}\PYG{n}{isfile}\PYG{p}{(}\PYG{n}{executable}\PYG{p}{)):}
    \PYG{k}{raise} \PYG{n+ne}{Exception}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}Could not find executable: \PYGZsq{}} \PYG{o}{+} \PYG{n}{executable}\PYG{p}{)}

\PYG{c+c1}{\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}}
\PYG{c+c1}{\PYGZsh{} SIMULATION PARAMETERS}
\PYG{c+c1}{\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}}

\PYG{c+c1}{\PYGZsh{}Define start and end RNG seeds; determines:}
\PYG{c+c1}{\PYGZsh{}No. simulated CMZs per run}
\PYG{c+c1}{\PYGZsh{}unique sequence of RNG results for each lineage}
\PYG{n}{start\PYGZus{}seed} \PYG{o}{=} \PYG{l+m+mi}{0}
\PYG{n}{end\PYGZus{}seed} \PYG{o}{=} \PYG{l+m+mi}{99} \PYG{c+c1}{\PYGZsh{}total seeds should be divisible by \PYGZsh{} cores}

\PYG{n}{output\PYGZus{}directory} \PYG{o}{=} \PYG{l+s+s2}{\PYGZdq{}WanOutput\PYGZdq{}}

\PYG{c+c1}{\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}}
\PYG{c+c1}{\PYGZsh{}MODEL PARAMETERS}
\PYG{c+c1}{\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}}

\PYG{c+c1}{\PYGZsh{}CMZ residency time }
\PYG{n}{wan\PYGZus{}residency\PYGZus{}time} \PYG{o}{=} \PYG{l+m+mf}{17.0}
\PYG{c+c1}{\PYGZsh{}factor to divide 3dpf progenitor population by to obtain estimate of stem cell population}
\PYG{n}{stem\PYGZus{}divisor} \PYG{o}{=} \PYG{l+m+mi}{10}
\PYG{c+c1}{\PYGZsh{}3dpf CMZ progenitor population mean and standard deviation}
\PYG{n}{progenitor\PYGZus{}mean} \PYG{o}{=} \PYG{l+m+mi}{792}
\PYG{n}{progenitor\PYGZus{}std} \PYG{o}{=} \PYG{l+m+mi}{160}

\PYG{c+c1}{\PYGZsh{}stem cell cycle parameters\PYGZhy{} cell cycle RV is a shifted gamma distribution}
\PYG{n}{stem\PYGZus{}gamma\PYGZus{}shift} \PYG{o}{=} \PYG{l+m+mi}{4}
\PYG{n}{stem\PYGZus{}gamma\PYGZus{}shape} \PYG{o}{=} \PYG{l+m+mf}{6.5} \PYG{c+c1}{\PYGZsh{}mean 30 hr stem cell time \PYGZhy{} in reality is probably more like 60+}
\PYG{n}{stem\PYGZus{}gamma\PYGZus{}scale} \PYG{o}{=} \PYG{l+m+mi}{4}

\PYG{n}{progenitor\PYGZus{}gamma\PYGZus{}shift} \PYG{o}{=} \PYG{l+m+mi}{4}  \PYG{c+c1}{\PYGZsh{}default He et al. values, mean 6 hr cycle time}
\PYG{n}{progenitor\PYGZus{}gamma\PYGZus{}shape} \PYG{o}{=} \PYG{l+m+mi}{2}
\PYG{n}{progenitor\PYGZus{}gamma\PYGZus{}scale} \PYG{o}{=} \PYG{l+m+mi}{1}
\PYG{n}{progenitor\PYGZus{}gamma\PYGZus{}sister} \PYG{o}{=} \PYG{l+m+mi}{1}

\PYG{n}{cmz\PYGZus{}theta\PYGZus{}string} \PYG{o}{=} \PYG{n+nb}{str}\PYG{p}{(}\PYG{n}{wan\PYGZus{}residency\PYGZus{}time}\PYG{p}{)} \PYG{o}{+} \PYG{l+s+s2}{\PYGZdq{} \PYGZdq{}} \PYG{o}{+} \PYG{n+nb}{str}\PYG{p}{(}\PYG{n}{stem\PYGZus{}divisor}\PYG{p}{)} \PYG{o}{+} \PYG{l+s+s2}{\PYGZdq{} \PYGZdq{}} \PYG{o}{+} \PYG{n+nb}{str}\PYG{p}{(}\PYG{n}{progenitor\PYGZus{}mean}\PYG{p}{)} \PYG{o}{+} \PYG{l+s+s2}{\PYGZdq{} \PYGZdq{}} \PYG{o}{+} \PYG{n+nb}{str}\PYG{p}{(}\PYG{n}{progenitor\PYGZus{}std}\PYG{p}{)} \PYG{o}{+} \PYG{l+s+s2}{\PYGZdq{} \PYGZdq{}} \PYG{o}{+} \PYG{n+nb}{str}\PYG{p}{(}\PYG{n}{stem\PYGZus{}gamma\PYGZus{}shift}\PYG{p}{)} \PYG{o}{+} \PYG{l+s+s2}{\PYGZdq{} \PYGZdq{}} \PYG{o}{+} \PYG{n+nb}{str}\PYG{p}{(}\PYG{n}{stem\PYGZus{}gamma\PYGZus{}shape}\PYG{p}{)} \PYG{o}{+} \PYG{l+s+s2}{\PYGZdq{} \PYGZdq{}} \PYG{o}{+} \PYG{n+nb}{str}\PYG{p}{(}\PYG{n}{stem\PYGZus{}gamma\PYGZus{}scale}\PYG{p}{)} \PYG{o}{+} \PYG{l+s+s2}{\PYGZdq{} \PYGZdq{}} \PYG{o}{+} \PYG{n+nb}{str}\PYG{p}{(}\PYG{n}{progenitor\PYGZus{}gamma\PYGZus{}shift}\PYG{p}{)} \PYG{o}{+} \PYG{l+s+s2}{\PYGZdq{} \PYGZdq{}} \PYG{o}{+} \PYG{n+nb}{str}\PYG{p}{(}\PYG{n}{progenitor\PYGZus{}gamma\PYGZus{}shape}\PYG{p}{)} \PYG{o}{+} \PYG{l+s+s2}{\PYGZdq{} \PYGZdq{}} \PYG{o}{+} \PYG{n+nb}{str}\PYG{p}{(}\PYG{n}{progenitor\PYGZus{}gamma\PYGZus{}scale}\PYG{p}{)} \PYG{o}{+} \PYG{l+s+s2}{\PYGZdq{} \PYGZdq{}} \PYG{o}{+} \PYG{n+nb}{str}\PYG{p}{(}\PYG{n}{progenitor\PYGZus{}gamma\PYGZus{}sister}\PYG{p}{)}

\PYG{c+c1}{\PYGZsh{}STOCHASTIC MITOTIC MODE}
\PYG{c+c1}{\PYGZsh{}HE ORIGINAL PARAMETERS}
\PYG{c+c1}{\PYGZsh{}mitotic mode per\PYGZhy{}phase probabilities}
\PYG{c+c1}{\PYGZsh{}3\PYGZhy{}phase mitotic mode time periodisation}
\PYG{n}{mitotic\PYGZus{}mode\PYGZus{}phase\PYGZus{}2} \PYG{o}{=} \PYG{l+m+mi}{8} \PYG{c+c1}{\PYGZsh{}These are phase boundaries rather than lengths as in eg. He\PYGZus{}output\PYGZus{}fixture.py}
\PYG{n}{mitotic\PYGZus{}mode\PYGZus{}phase\PYGZus{}3} \PYG{o}{=} \PYG{l+m+mi}{15}
\PYG{n}{phase\PYGZus{}1\PYGZus{}pPP} \PYG{o}{=} \PYG{l+m+mf}{1.0}
\PYG{n}{phase\PYGZus{}1\PYGZus{}pPD} \PYG{o}{=} \PYG{l+m+mf}{0.0}
\PYG{n}{phase\PYGZus{}2\PYGZus{}pPP} \PYG{o}{=} \PYG{l+m+mf}{0.2}
\PYG{n}{phase\PYGZus{}2\PYGZus{}pPD} \PYG{o}{=} \PYG{l+m+mf}{0.4}
\PYG{n}{phase\PYGZus{}3\PYGZus{}pPP} \PYG{o}{=} \PYG{l+m+mf}{0.2}
\PYG{n}{phase\PYGZus{}3\PYGZus{}pPD} \PYG{o}{=} \PYG{l+m+mf}{0.0}

\PYG{n}{stochastic\PYGZus{}theta\PYGZus{}string} \PYG{o}{=} \PYG{n+nb}{str}\PYG{p}{(}\PYG{n}{mitotic\PYGZus{}mode\PYGZus{}phase\PYGZus{}2}\PYG{p}{)} \PYG{o}{+} \PYG{l+s+s2}{\PYGZdq{} \PYGZdq{}} \PYG{o}{+} \PYG{n+nb}{str}\PYG{p}{(}\PYG{n}{mitotic\PYGZus{}mode\PYGZus{}phase\PYGZus{}3}\PYG{p}{)} \PYG{o}{+} \PYG{l+s+s2}{\PYGZdq{} \PYGZdq{}} \PYG{o}{+}\PYG{n+nb}{str}\PYG{p}{(}\PYG{n}{phase\PYGZus{}1\PYGZus{}pPP}\PYG{p}{)} \PYG{o}{+} \PYG{l+s+s2}{\PYGZdq{} \PYGZdq{}} \PYG{o}{+} \PYG{n+nb}{str}\PYG{p}{(}\PYG{n}{phase\PYGZus{}1\PYGZus{}pPD}\PYG{p}{)} \PYG{o}{+} \PYG{l+s+s2}{\PYGZdq{} \PYGZdq{}} \PYG{o}{+} \PYG{n+nb}{str}\PYG{p}{(}\PYG{n}{phase\PYGZus{}2\PYGZus{}pPP}\PYG{p}{)} \PYG{o}{+} \PYG{l+s+s2}{\PYGZdq{} \PYGZdq{}} \PYG{o}{+} \PYG{n+nb}{str}\PYG{p}{(}\PYG{n}{phase\PYGZus{}2\PYGZus{}pPD}\PYG{p}{)} \PYG{o}{+} \PYG{l+s+s2}{\PYGZdq{} \PYGZdq{}} \PYG{o}{+} \PYG{n+nb}{str}\PYG{p}{(}\PYG{n}{phase\PYGZus{}3\PYGZus{}pPP}\PYG{p}{)} \PYG{o}{+} \PYG{l+s+s2}{\PYGZdq{} \PYGZdq{}} \PYG{o}{+} \PYG{n+nb}{str}\PYG{p}{(}\PYG{n}{phase\PYGZus{}3\PYGZus{}pPD}\PYG{p}{)}

\PYG{k}{def} \PYG{n+nf}{main}\PYG{p}{():}

    \PYG{n}{command\PYGZus{}list} \PYG{o}{=} \PYG{p}{[]}

    \PYG{c+c1}{\PYGZsh{} Use processes equal to the number of cpus available}
    \PYG{n}{cpu\PYGZus{}count} \PYG{o}{=} \PYG{n}{multiprocessing}\PYG{o}{.}\PYG{n}{cpu\PYGZus{}count}\PYG{p}{()}
    \PYG{n}{seeds\PYGZus{}per\PYGZus{}command} \PYG{o}{=} \PYG{p}{(}\PYG{n}{end\PYGZus{}seed} \PYG{o}{+} \PYG{l+m+mi}{1}\PYG{p}{)} \PYG{o}{/} \PYG{n}{cpu\PYGZus{}count}
    \PYG{n}{base\PYGZus{}command} \PYG{o}{=} \PYG{n}{executable} \PYG{o}{+} \PYG{l+s+s2}{\PYGZdq{} \PYGZdq{}} \PYG{o}{+} \PYG{n}{output\PYGZus{}directory}
    
    \PYG{k}{for} \PYG{n}{i} \PYG{o+ow}{in} \PYG{n+nb}{range}\PYG{p}{(}\PYG{l+m+mi}{0}\PYG{p}{,}\PYG{n}{cpu\PYGZus{}count}\PYG{p}{):}
        \PYG{n}{curr\PYGZus{}start\PYGZus{}seed} \PYG{o}{=} \PYG{n}{i} \PYG{o}{*} \PYG{n}{seeds\PYGZus{}per\PYGZus{}command}
        \PYG{n}{curr\PYGZus{}end\PYGZus{}seed} \PYG{o}{=} \PYG{n}{curr\PYGZus{}start\PYGZus{}seed} \PYG{o}{+} \PYG{p}{(}\PYG{n}{seeds\PYGZus{}per\PYGZus{}command} \PYG{o}{\PYGZhy{}} \PYG{l+m+mi}{1}\PYG{p}{)}
        
        \PYG{n}{command} \PYG{o}{=} \PYG{n}{base\PYGZus{}command} \PYG{o}{+} \PYG{l+s+s2}{\PYGZdq{} \PYGZdq{}}\PYGZbs{}
            \PYG{o}{+}\PYG{n+nb}{str}\PYG{p}{(}\PYG{n}{curr\PYGZus{}start\PYGZus{}seed}\PYG{p}{)} \PYG{o}{+} \PYG{l+s+s2}{\PYGZdq{} \PYGZdq{}}\PYGZbs{}
            \PYG{o}{+}\PYG{n+nb}{str}\PYG{p}{(}\PYG{n}{curr\PYGZus{}end\PYGZus{}seed}\PYG{p}{)} \PYG{o}{+} \PYG{l+s+s2}{\PYGZdq{} \PYGZdq{}}\PYGZbs{}
            \PYG{o}{+}\PYG{n}{cmz\PYGZus{}theta\PYGZus{}string} \PYG{o}{+} \PYG{l+s+s2}{\PYGZdq{} \PYGZdq{}}\PYGZbs{}
            \PYG{o}{+}\PYG{n}{stochastic\PYGZus{}theta\PYGZus{}string}
        
        \PYG{c+c1}{\PYGZsh{}command\PYGZus{}list.append(command)}
        
    \PYG{n}{command\PYGZus{}list}\PYG{o}{.}\PYG{n}{append}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}/home/main/chaste\PYGZus{}build/projects/ISP/apps/WanSimulator WanOutput 18.0 24.0 17.0 10 792 160 4 6.5 4 4 2 1 1 8 15 1.0 0.0 0.2 0.4 0.2 0.0\PYGZdq{}}\PYG{p}{)}
    \PYG{n}{command\PYGZus{}list}\PYG{o}{.}\PYG{n}{append}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}/home/main/chaste\PYGZus{}build/projects/ISP/apps/WanSimulator WanOutput 42.0 49.0 17.0 10 792 160 4 6.5 4 4 2 1 1 8 15 1.0 0.0 0.2 0.4 0.2 0.0\PYGZdq{}}\PYG{p}{)}
    \PYG{n}{command\PYGZus{}list}\PYG{o}{.}\PYG{n}{append}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}/home/main/chaste\PYGZus{}build/projects/ISP/apps/WanSimulator WanOutput 51.0 57.0 17.0 10 792 160 4 6.5 4 4 2 1 1 8 15 1.0 0.0 0.2 0.4 0.2 0.0\PYGZdq{}}\PYG{p}{)}
    \PYG{n}{command\PYGZus{}list}\PYG{o}{.}\PYG{n}{append}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}/home/main/chaste\PYGZus{}build/projects/ISP/apps/WanSimulator WanOutput 94.0 99.0 17.0 10 792 160 4 6.5 4 4 2 1 1 8 15 1.0 0.0 0.2 0.4 0.2 0.0\PYGZdq{}}\PYG{p}{)}
    \PYG{n}{command\PYGZus{}list}\PYG{o}{.}\PYG{n}{append}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}/home/main/chaste\PYGZus{}build/projects/ISP/apps/WanSimulator WanOutput 58.0 64.0 17.0 10 792 160 4 6.5 4 4 2 1 1 8 15 1.0 0.0 0.2 0.4 0.2 0.0\PYGZdq{}}\PYG{p}{)}
    \PYG{n}{command\PYGZus{}list}\PYG{o}{.}\PYG{n}{append}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}/home/main/chaste\PYGZus{}build/projects/ISP/apps/WanSimulator WanOutput 65.0 70.0 17.0 10 792 160 4 6.5 4 4 2 1 1 8 15 1.0 0.0 0.2 0.4 0.2 0.0\PYGZdq{}}\PYG{p}{)}
    \PYG{n}{command\PYGZus{}list}\PYG{o}{.}\PYG{n}{append}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}/home/main/chaste\PYGZus{}build/projects/ISP/apps/WanSimulator WanOutput 71.0 74.0 17.0 10 792 160 4 6.5 4 4 2 1 1 8 15 1.0 0.0 0.2 0.4 0.2 0.0\PYGZdq{}}\PYG{p}{)}

    \PYG{k}{print}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}Starting simulations with \PYGZdq{}} \PYG{o}{+} \PYG{n+nb}{str}\PYG{p}{(}\PYG{n}{cpu\PYGZus{}count}\PYG{p}{)} \PYG{o}{+} \PYG{l+s+s2}{\PYGZdq{} processes\PYGZdq{}}\PYG{p}{)}
   
    \PYG{c+c1}{\PYGZsh{} Generate a pool of workers}
    \PYG{n}{pool} \PYG{o}{=} \PYG{n}{multiprocessing}\PYG{o}{.}\PYG{n}{Pool}\PYG{p}{(}\PYG{n}{processes}\PYG{o}{=}\PYG{n}{cpu\PYGZus{}count}\PYG{p}{)}

    \PYG{c+c1}{\PYGZsh{} Pass the list of bash commands to the pool, block until pool is complete}
    \PYG{n}{pool}\PYG{o}{.}\PYG{n}{map}\PYG{p}{(}\PYG{n}{execute\PYGZus{}command}\PYG{p}{,} \PYG{n}{command\PYGZus{}list}\PYG{p}{,} \PYG{l+m+mi}{1}\PYG{p}{)}


\PYG{c+c1}{\PYGZsh{} This is a helper function for run\PYGZus{}simulation that runs bash commands in separate processes}
\PYG{k}{def} \PYG{n+nf}{execute\PYGZus{}command}\PYG{p}{(}\PYG{n}{cmd}\PYG{p}{):}
    \PYG{k}{print}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}Executing command: \PYGZdq{}} \PYG{o}{+} \PYG{n}{cmd}\PYG{p}{)}
    \PYG{k}{return} \PYG{n}{subprocess}\PYG{o}{.}\PYG{n}{call}\PYG{p}{(}\PYG{n}{cmd}\PYG{p}{,} \PYG{n}{shell}\PYG{o}{=}\PYG{n+nb+bp}{True}\PYG{p}{)}


\PYG{k}{if} \PYG{n+nv+vm}{\PYGZus{}\PYGZus{}name\PYGZus{}\PYGZus{}} \PYG{o}{==} \PYG{l+s+s2}{\PYGZdq{}\PYGZus{}\PYGZus{}main\PYGZus{}\PYGZus{}\PYGZdq{}}\PYG{p}{:}
    \PYG{n}{main}\PYG{p}{()}
\end{Verbatim}
