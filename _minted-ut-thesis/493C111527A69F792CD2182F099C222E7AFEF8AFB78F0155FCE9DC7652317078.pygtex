\begin{Verbatim}[commandchars=\\\{\},codes={\catcode`\$=3\catcode`\^=7\catcode`\_=8}]
\PYG{n}{struct} \PYG{n}{Chain\PYGZus{}ID}
    \PYG{n}{obs\PYGZus{}id}\PYG{o}{::}\PYG{k+kt}{AbstractString}
    \PYG{n}{K}\PYG{o}{::}\PYG{k+kt}{Integer}
    \PYG{n}{order}\PYG{o}{::}\PYG{k+kt}{Integer}
    \PYG{n}{replicate}\PYG{o}{::}\PYG{k+kt}{Integer}
    \PYG{n}{Chain\PYGZus{}ID}\PYG{p}{(}\PYG{n}{obs\PYGZus{}id}\PYG{p}{,}\PYG{n}{K}\PYG{p}{,}\PYG{n}{order}\PYG{p}{,}\PYG{n}{replicate}\PYG{p}{)} \PYG{o}{=} \PYG{n}{assert\PYGZus{}chain\PYGZus{}id}\PYG{p}{(}\PYG{n}{K}\PYG{p}{,}\PYG{n}{order}\PYG{p}{,}\PYG{n}{replicate}\PYG{p}{)} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{n}{new}\PYG{p}{(}\PYG{n}{obs\PYGZus{}id}\PYG{p}{,}\PYG{n}{K}\PYG{p}{,}\PYG{n}{order}\PYG{p}{,}\PYG{n}{replicate}\PYG{p}{)}
\PYG{k}{end}

\PYG{k}{function} \PYG{n}{assert\PYGZus{}chain\PYGZus{}id}\PYG{p}{(}\PYG{n}{K}\PYG{p}{,} \PYG{n}{order}\PYG{p}{,} \PYG{n}{replicate}\PYG{p}{)}
    \PYG{n}{K} \PYG{o}{\PYGZlt{}} \PYG{l+m+mi}{1} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{n}{throw}\PYG{p}{(}\PYG{k+kt}{ArgumentError}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Chain\PYGZus{}ID K (\PYGZsh{} of hmm states) must be a positive integer!\PYGZdq{}}\PYG{p}{))}
    \PYG{n}{order} \PYG{o}{\PYGZlt{}} \PYG{l+m+mi}{0} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{n}{throw}\PYG{p}{(}\PYG{k+kt}{ArgumentError}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Chain\PYGZus{}ID symbol order must be zero or a positive integer!\PYGZdq{}}\PYG{p}{))}
    \PYG{n}{replicate} \PYG{o}{\PYGZlt{}} \PYG{l+m+mi}{1} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{n}{throw}\PYG{p}{(}\PYG{k+kt}{ArgumentError}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Chain\PYGZus{}ID replicate must be a positive integer!\PYGZdq{}}\PYG{p}{))}
    \PYG{k}{return} \PYG{k+kc}{true}
\PYG{k}{end}

\PYG{n}{struct} \PYG{n}{EM\PYGZus{}step}
    \PYG{n}{iterate}\PYG{o}{::}\PYG{k+kt}{Integer}
    \PYG{n}{hmm}\PYG{o}{::}\PYG{n}{BHMM}
    \PYG{n}{log\PYGZus{}p}\PYG{o}{::}\PYG{k+kt}{AbstractFloat}
    \PYG{n}{delta}\PYG{o}{::}\PYG{k+kt}{AbstractFloat}
    \PYG{n}{converged}\PYG{o}{::}\PYG{k+kt}{Bool}
    \PYG{n}{EM\PYGZus{}step}\PYG{p}{(}\PYG{n}{iterate}\PYG{p}{,}\PYG{n}{hmm}\PYG{p}{,}\PYG{n}{log\PYGZus{}p}\PYG{p}{,}\PYG{n}{delta}\PYG{p}{,}\PYG{n}{converged}\PYG{p}{)}\PYG{o}{=}\PYG{n}{assert\PYGZus{}step}\PYG{p}{(}\PYG{n}{iterate}\PYG{p}{,}\PYG{n}{hmm}\PYG{p}{,}\PYG{n}{log\PYGZus{}p}\PYG{p}{)} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{n}{new}\PYG{p}{(}\PYG{n}{iterate}\PYG{p}{,} \PYG{n}{hmm}\PYG{p}{,} \PYG{n}{log\PYGZus{}p}\PYG{p}{,} \PYG{n}{delta}\PYG{p}{,} \PYG{n}{converged}\PYG{p}{)}
\PYG{k}{end}

\PYG{k}{function} \PYG{n}{assert\PYGZus{}step}\PYG{p}{(}\PYG{n}{iterate}\PYG{p}{,} \PYG{n}{hmm}\PYG{p}{,} \PYG{n}{log\PYGZus{}p}\PYG{p}{)}
    \PYG{n}{iterate} \PYG{o}{\PYGZlt{}} \PYG{l+m+mi}{1} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{n}{throw}\PYG{p}{(}\PYG{k+kt}{ArgumentError}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}EM\PYGZus{}step iterate number must be a positive integer!\PYGZdq{}}\PYG{p}{))}
    \PYG{n}{assert\PYGZus{}hmm}\PYG{p}{(}\PYG{n}{hmm}\PYG{o}{.}\PYG{n}{a}\PYG{p}{,} \PYG{n}{hmm}\PYG{o}{.}\PYG{n}{A}\PYG{p}{,} \PYG{n}{hmm}\PYG{o}{.}\PYG{n}{B}\PYG{p}{)}
    \PYG{n}{log\PYGZus{}p} \PYG{o}{\PYGZgt{}} \PYG{l+m+mf}{0.0} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{n}{throw}\PYG{p}{(}\PYG{k+kt}{ArgumentError}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}EM\PYGZus{}step log probability value must be 0 or negative!\PYGZdq{}}\PYG{p}{))}
    \PYG{k}{return} \PYG{k+kc}{true}
\PYG{k}{end}
\end{Verbatim}
