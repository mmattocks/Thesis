\begin{Verbatim}[commandchars=\\\{\},codes={\catcode`\$=3\catcode`\^=7\catcode`\_=8}]
\PYG{k}{function} \PYG{n}{get\PYGZus{}partition\PYGZus{}code\PYGZus{}dict}\PYG{p}{(}\PYG{n}{dict\PYGZus{}forward}\PYG{o}{::}\PYG{k+kt}{Bool}\PYG{o}{=}\PYG{k+kc}{true}\PYG{p}{)}
    \PYG{k}{if} \PYG{n}{dict\PYGZus{}forward} \PYG{o}{==} \PYG{k+kc}{true}
        \PYG{k}{return} \PYG{n}{partition\PYGZus{}code\PYGZus{}dict} \PYG{o}{=} \PYG{k+kt}{Dict}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}intergenic\PYGZdq{}}\PYG{o}{=\PYGZgt{}}\PYG{l+m+mi}{1}\PYG{p}{,}\PYG{l+s}{\PYGZdq{}periexonic\PYGZdq{}}\PYG{o}{=\PYGZgt{}}\PYG{l+m+mi}{2}\PYG{p}{,}\PYG{l+s}{\PYGZdq{}exon\PYGZdq{}}\PYG{o}{=\PYGZgt{}}\PYG{l+m+mi}{3}\PYG{p}{)}
    \PYG{k}{else}
        \PYG{k}{return} \PYG{n}{code\PYGZus{}partition\PYGZus{}dict} \PYG{o}{=} \PYG{k+kt}{Dict}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{o}{=\PYGZgt{}}\PYG{l+s}{\PYGZdq{}intergenic\PYGZdq{}}\PYG{p}{,} \PYG{l+m+mi}{2}\PYG{o}{=\PYGZgt{}}\PYG{l+s}{\PYGZdq{}periexonic\PYGZdq{}}\PYG{p}{,} \PYG{l+m+mi}{3}\PYG{o}{=\PYGZgt{}}\PYG{l+s}{\PYGZdq{}exon\PYGZdq{}}\PYG{p}{)}
    \PYG{k}{end}
\PYG{k}{end}

\PYG{k}{function} \PYG{n}{make\PYGZus{}padded\PYGZus{}df}\PYG{p}{(}\PYG{n}{position\PYGZus{}fasta}\PYG{o}{::}\PYG{n}{String}\PYG{p}{,} \PYG{n}{gff3\PYGZus{}path}\PYG{o}{::}\PYG{n}{String}\PYG{p}{,} \PYG{n}{genome\PYGZus{}path}\PYG{o}{::}\PYG{n}{String}\PYG{p}{,} \PYG{n}{genome\PYGZus{}index\PYGZus{}path}\PYG{o}{::}\PYG{n}{String}\PYG{p}{,} \PYG{n}{pad}\PYG{o}{::}\PYG{k+kt}{Integer}\PYG{p}{)}
    \PYG{n}{position\PYGZus{}reader} \PYG{o}{=} \PYG{n}{FASTA}\PYG{o}{.}\PYG{n}{Reader}\PYG{p}{(}\PYG{n}{open}\PYG{p}{((}\PYG{n}{position\PYGZus{}fasta}\PYG{p}{),}\PYG{l+s}{\PYGZdq{}r\PYGZdq{}}\PYG{p}{))}
    \PYG{n}{genome\PYGZus{}reader} \PYG{o}{=} \PYG{n}{open}\PYG{p}{(}\PYG{n}{FASTA}\PYG{o}{.}\PYG{n}{Reader}\PYG{p}{,} \PYG{n}{genome\PYGZus{}path}\PYG{p}{,} \PYG{n}{index}\PYG{o}{=}\PYG{n}{genome\PYGZus{}index\PYGZus{}path}\PYG{p}{)}
    \PYG{n}{scaffold\PYGZus{}df} \PYG{o}{=} \PYG{n}{build\PYGZus{}scaffold\PYGZus{}df}\PYG{p}{(}\PYG{n}{gff3\PYGZus{}path}\PYG{p}{)}
    \PYG{n}{position\PYGZus{}df} \PYG{o}{=} \PYG{n}{DataFrame}\PYG{p}{(}\PYG{n}{SeqID} \PYG{o}{=} \PYG{n}{String}\PYG{p}{[],} \PYG{n}{Start}\PYG{o}{=}\PYG{k+kt}{Int}\PYG{p}{[],} \PYG{n}{End}\PYG{o}{=}\PYG{k+kt}{Int}\PYG{p}{[],} \PYG{n}{PadSeq} \PYG{o}{=} \PYG{n}{LongSequence}\PYG{p}{[],} \PYG{n}{PadStart}\PYG{o}{=}\PYG{k+kt}{Int}\PYG{p}{[],} \PYG{n}{RelStart}\PYG{o}{=}\PYG{k+kt}{Int}\PYG{p}{[],} \PYG{n}{SeqOffset}\PYG{o}{=}\PYG{k+kt}{Int}\PYG{p}{[])}
    \PYG{n}{scaffold\PYGZus{}seq\PYGZus{}dict} \PYG{o}{=} \PYG{n}{build\PYGZus{}scaffold\PYGZus{}seq\PYGZus{}dict}\PYG{p}{(}\PYG{n}{genome\PYGZus{}path}\PYG{p}{,} \PYG{n}{genome\PYGZus{}index\PYGZus{}path}\PYG{p}{)}

    \PYG{k}{for} \PYG{n}{entry} \PYG{k+kp}{in} \PYG{n}{position\PYGZus{}reader}
        \PYG{n}{scaffold} \PYG{o}{=} \PYG{n}{FASTA}\PYG{o}{.}\PYG{n}{identifier}\PYG{p}{(}\PYG{n}{entry}\PYG{p}{)}

        \PYG{k}{if} \PYG{n}{scaffold} \PYG{o}{!=} \PYG{l+s}{\PYGZdq{}MT\PYGZdq{}}
            \PYG{n}{desc\PYGZus{}array} \PYG{o}{=} \PYG{n}{split}\PYG{p}{(}\PYG{n}{FASTA}\PYG{o}{.}\PYG{n}{description}\PYG{p}{(}\PYG{n}{entry}\PYG{p}{))}
            \PYG{n}{pos\PYGZus{}start} \PYG{o}{=} \PYG{n}{parse}\PYG{p}{(}\PYG{k+kt}{Int}\PYG{p}{,} \PYG{n}{desc\PYGZus{}array}\PYG{p}{[}\PYG{l+m+mi}{2}\PYG{p}{])}
            \PYG{n}{pos\PYGZus{}end} \PYG{o}{=} \PYG{n}{parse}\PYG{p}{(}\PYG{k+kt}{Int}\PYG{p}{,} \PYG{n}{desc\PYGZus{}array}\PYG{p}{[}\PYG{l+m+mi}{4}\PYG{p}{])}
            \PYG{n}{scaffold\PYGZus{}end} \PYG{o}{=} \PYG{n}{scaffold\PYGZus{}df}\PYG{o}{.}\PYG{n}{End}\PYG{p}{[}\PYG{n}{findfirst}\PYG{p}{(}\PYG{n}{isequal}\PYG{p}{(}\PYG{n}{scaffold}\PYG{p}{),} \PYG{n}{scaffold\PYGZus{}df}\PYG{o}{.}\PYG{n}{SeqID}\PYG{p}{)]}

            \PYG{n}{pad\PYGZus{}start}\PYG{o}{=}\PYG{n}{max}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{,}\PYG{n}{pos\PYGZus{}start}\PYG{o}{\PYGZhy{}}\PYG{n}{pad}\PYG{p}{)}
            \PYG{n}{pad\PYGZus{}length}\PYG{o}{=} \PYG{n}{pos\PYGZus{}start} \PYG{o}{\PYGZhy{}} \PYG{n}{pad\PYGZus{}start}
            \PYG{n}{seq\PYGZus{}offset} \PYG{o}{=} \PYG{n}{pad} \PYG{o}{\PYGZhy{}} \PYG{n}{pad\PYGZus{}length}
            \PYG{n}{padded\PYGZus{}seq} \PYG{o}{=} \PYG{n}{fetch\PYGZus{}sequence}\PYG{p}{(}\PYG{n}{scaffold}\PYG{p}{,} \PYG{n}{scaffold\PYGZus{}seq\PYGZus{}dict}\PYG{p}{,} \PYG{n}{pad\PYGZus{}start}\PYG{p}{,} \PYG{n}{pos\PYGZus{}end}\PYG{p}{,} \PYG{l+s+sc}{\PYGZsq{}+\PYGZsq{}}\PYG{p}{)}

            \PYG{k}{if} \PYG{o}{!}\PYG{n}{hasambiguity}\PYG{p}{(}\PYG{n}{padded\PYGZus{}seq}\PYG{p}{)}
                \PYG{n}{push!}\PYG{p}{(}\PYG{n}{position\PYGZus{}df}\PYG{p}{,} \PYG{p}{[}\PYG{n}{scaffold}\PYG{p}{,} \PYG{n}{pos\PYGZus{}start}\PYG{p}{,} \PYG{n}{pos\PYGZus{}end}\PYG{p}{,} \PYG{n}{padded\PYGZus{}seq}\PYG{p}{,} \PYG{n}{pad\PYGZus{}start}\PYG{p}{,} \PYG{n}{pad\PYGZus{}length}\PYG{p}{,} \PYG{n}{seq\PYGZus{}offset}\PYG{p}{])}
            \PYG{k}{end}
        \PYG{k}{end}
    \PYG{k}{end}
    
    \PYG{n}{close}\PYG{p}{(}\PYG{n}{position\PYGZus{}reader}\PYG{p}{)}
    \PYG{n}{close}\PYG{p}{(}\PYG{n}{genome\PYGZus{}reader}\PYG{p}{)}
    \PYG{k}{return} \PYG{n}{position\PYGZus{}df}
\PYG{k}{end}

\PYG{k}{function} \PYG{n}{add\PYGZus{}partition\PYGZus{}masks!}\PYG{p}{(}\PYG{n}{position\PYGZus{}df}\PYG{o}{::}\PYG{n}{DataFrame}\PYG{p}{,} \PYG{n}{gff3\PYGZus{}path}\PYG{o}{::}\PYG{n}{String}\PYG{p}{,} \PYG{n}{perigenic\PYGZus{}pad}\PYG{o}{::}\PYG{k+kt}{Integer}\PYG{o}{=}\PYG{l+m+mi}{500}\PYG{p}{,} \PYG{n}{columns}\PYG{o}{::}\PYG{k+kt}{Tuple}\PYG{p}{\PYGZob{}}\PYG{k+kt}{Symbol}\PYG{p}{,}\PYG{k+kt}{Symbol}\PYG{p}{,}\PYG{k+kt}{Symbol}\PYG{p}{\PYGZcb{}}\PYG{o}{=}\PYG{p}{(}\PYG{o}{:}\PYG{n}{SeqID}\PYG{p}{,} \PYG{o}{:}\PYG{n}{PadSeq}\PYG{p}{,} \PYG{o}{:}\PYG{n}{PadStart}\PYG{p}{))}
    \PYG{n}{partitions}\PYG{o}{=}\PYG{p}{[}\PYG{l+s}{\PYGZdq{}exon\PYGZdq{}}\PYG{p}{,} \PYG{l+s}{\PYGZdq{}periexonic\PYGZdq{}}\PYG{p}{,} \PYG{l+s}{\PYGZdq{}intergenic\PYGZdq{}}\PYG{p}{]}
    \PYG{n}{partition\PYGZus{}coords\PYGZus{}dict} \PYG{o}{=} \PYG{n}{partition\PYGZus{}genome\PYGZus{}coordinates}\PYG{p}{(}\PYG{n}{gff3\PYGZus{}path}\PYG{p}{,} \PYG{n}{perigenic\PYGZus{}pad}\PYG{p}{)}
    \PYG{n}{partitioned\PYGZus{}scaffolds} \PYG{o}{=} \PYG{n}{divide\PYGZus{}partitions\PYGZus{}by\PYGZus{}scaffold}\PYG{p}{(}\PYG{n}{partition\PYGZus{}coords\PYGZus{}dict}\PYG{p}{)}
    \PYG{n}{maskcol} \PYG{o}{=} \PYG{p}{[}\PYG{n}{zeros}\PYG{p}{(}\PYG{k+kt}{Int64}\PYG{p}{,}\PYG{l+m+mi}{0}\PYG{p}{,}\PYG{l+m+mi}{0}\PYG{p}{)} \PYG{k}{for} \PYG{n}{i} \PYG{k+kp}{in} \PYG{l+m+mi}{1}\PYG{o}{:}\PYG{n}{size}\PYG{p}{(}\PYG{n}{position\PYGZus{}df}\PYG{p}{,}\PYG{l+m+mi}{1}\PYG{p}{)]}
    \PYG{n}{position\PYGZus{}df}\PYG{o}{.}\PYG{n}{MaskMatrix}\PYG{o}{=}\PYG{n}{maskcol}

    \PYG{n+nd}{@Threads}\PYG{o}{.}\PYG{n}{threads} \PYG{k}{for} \PYG{n}{entry} \PYG{k+kp}{in} \PYG{n}{eachrow}\PYG{p}{(}\PYG{n}{position\PYGZus{}df}\PYG{p}{)}
        \PYG{n}{scaffold} \PYG{o}{=} \PYG{n}{entry}\PYG{p}{[}\PYG{n}{columns}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{]]}
        \PYG{n}{maskLength} \PYG{o}{=} \PYG{n}{length}\PYG{p}{(}\PYG{n}{entry}\PYG{p}{[}\PYG{n}{columns}\PYG{p}{[}\PYG{l+m+mi}{2}\PYG{p}{]])}
        \PYG{n}{seqStart} \PYG{o}{=} \PYG{n}{entry}\PYG{p}{[}\PYG{n}{columns}\PYG{p}{[}\PYG{l+m+mi}{3}\PYG{p}{]]}

        \PYG{n}{scaffold\PYGZus{}coords\PYGZus{}dict} \PYG{o}{=} \PYG{k+kt}{Dict}\PYG{p}{\PYGZob{}}\PYG{n}{String}\PYG{p}{,}\PYG{n}{DataFrame}\PYG{p}{\PYGZcb{}()}
        
        \PYG{k}{for} \PYG{p}{((}\PYG{n}{partition}\PYG{p}{,} \PYG{n}{part\PYGZus{}scaffold}\PYG{p}{),} \PYG{n}{df}\PYG{p}{)} \PYG{k+kp}{in} \PYG{n}{partitioned\PYGZus{}scaffolds}
            \PYG{k}{if} \PYG{n}{scaffold} \PYG{o}{==} \PYG{n}{part\PYGZus{}scaffold}
                \PYG{n}{scaffold\PYGZus{}coords\PYGZus{}dict}\PYG{p}{[}\PYG{n}{partition}\PYG{p}{]} \PYG{o}{=} \PYG{n}{df}
            \PYG{k}{end}
        \PYG{k}{end}

        \PYG{n}{entry}\PYG{o}{.}\PYG{n}{MaskMatrix}\PYG{o}{=}\PYG{n}{mask\PYGZus{}sequence\PYGZus{}by\PYGZus{}partition}\PYG{p}{(}\PYG{n}{maskLength}\PYG{p}{,} \PYG{n}{seqStart}\PYG{p}{,} \PYG{n}{scaffold\PYGZus{}coords\PYGZus{}dict}\PYG{p}{)}
    \PYG{k}{end}

\PYG{k}{end}
                \PYG{c}{\PYGZsh{}add\PYGZus{}partition\PYGZus{}masks!() SUBFUNCTIONS}
                \PYG{k}{function} \PYG{n}{divide\PYGZus{}partitions\PYGZus{}by\PYGZus{}scaffold}\PYG{p}{(}\PYG{n}{partition\PYGZus{}coords\PYGZus{}dict}\PYG{o}{::}\PYG{k+kt}{Dict}\PYG{p}{\PYGZob{}}\PYG{n}{String}\PYG{p}{,} \PYG{n}{DataFrame}\PYG{p}{\PYGZcb{})}
                    \PYG{n}{scaffold\PYGZus{}coords\PYGZus{}dict} \PYG{o}{=} \PYG{k+kt}{Dict}\PYG{p}{\PYGZob{}}\PYG{k+kt}{Tuple}\PYG{p}{\PYGZob{}}\PYG{n}{String}\PYG{p}{,} \PYG{n}{String}\PYG{p}{\PYGZcb{},} \PYG{n}{DataFrame}\PYG{p}{\PYGZcb{}()}
                    \PYG{k}{for} \PYG{p}{(}\PYG{n}{partition\PYGZus{}id}\PYG{p}{,} \PYG{n}{partition\PYGZus{}df}\PYG{p}{)} \PYG{k+kp}{in} \PYG{n}{partition\PYGZus{}coords\PYGZus{}dict}
                        \PYG{k}{for} \PYG{n}{scaffold\PYGZus{}subframe} \PYG{k+kp}{in} \PYG{n}{groupby}\PYG{p}{(}\PYG{n}{partition\PYGZus{}df}\PYG{p}{,} \PYG{o}{:}\PYG{n}{SeqID}\PYG{p}{)}
                            \PYG{n}{scaffold\PYGZus{}id} \PYG{o}{=} \PYG{n}{scaffold\PYGZus{}subframe}\PYG{o}{.}\PYG{n}{SeqID}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{]}
                            \PYG{n}{scaffold\PYGZus{}df} \PYG{o}{=} \PYG{n}{copy}\PYG{p}{(}\PYG{n}{scaffold\PYGZus{}subframe}\PYG{p}{)}
                            \PYG{n}{scaffold\PYGZus{}coords\PYGZus{}dict}\PYG{p}{[(}\PYG{n}{partition\PYGZus{}id}\PYG{p}{,} \PYG{n}{scaffold\PYGZus{}id}\PYG{p}{)]} \PYG{o}{=} \PYG{n}{scaffold\PYGZus{}df}
                        \PYG{k}{end}
                    \PYG{k}{end}
                    \PYG{k}{return} \PYG{n}{scaffold\PYGZus{}coords\PYGZus{}dict}
                \PYG{k}{end}

                \PYG{k}{function} \PYG{n}{mask\PYGZus{}sequence\PYGZus{}by\PYGZus{}partition}\PYG{p}{(}\PYG{n}{maskLength}\PYG{o}{::}\PYG{k+kt}{Integer}\PYG{p}{,} \PYG{n}{seqStart}\PYG{o}{::}\PYG{k+kt}{Integer}\PYG{p}{,} \PYG{n}{scaffold\PYGZus{}coords\PYGZus{}dict}\PYG{o}{::}\PYG{k+kt}{Dict}\PYG{p}{\PYGZob{}}\PYG{n}{String}\PYG{p}{,} \PYG{n}{DataFrame}\PYG{p}{\PYGZcb{})}
                    \PYG{n}{partition\PYGZus{}code\PYGZus{}dict} \PYG{o}{=} \PYG{n}{get\PYGZus{}partition\PYGZus{}code\PYGZus{}dict}\PYG{p}{()}
                    \PYG{n}{seqMask} \PYG{o}{=} \PYG{n}{zeros}\PYG{p}{(}\PYG{k+kt}{Integer}\PYG{p}{,} \PYG{p}{(}\PYG{n}{maskLength}\PYG{p}{,} \PYG{l+m+mi}{2}\PYG{p}{))}
                    \PYG{n}{position} \PYG{o}{=} \PYG{n}{seqStart}
                    \PYG{k}{while} \PYG{n}{position} \PYG{o}{\PYGZlt{}=} \PYG{n}{seqStart}\PYG{o}{+}\PYG{n}{maskLength}
                        \PYG{n}{position\PYGZus{}partition}\PYG{p}{,} \PYG{n}{partition\PYGZus{}extent}\PYG{p}{,} \PYG{n}{position\PYGZus{}strand} \PYG{o}{=} \PYG{n}{find\PYGZus{}position\PYGZus{}partition}\PYG{p}{(}\PYG{n}{position}\PYG{p}{,} \PYG{n}{scaffold\PYGZus{}coords\PYGZus{}dict}\PYG{p}{)}
                
                        \PYG{n}{partition\PYGZus{}code} \PYG{o}{=} \PYG{n}{partition\PYGZus{}code\PYGZus{}dict}\PYG{p}{[}\PYG{n}{position\PYGZus{}partition}\PYG{p}{]}
                        \PYG{n}{mask\PYGZus{}position} \PYG{o}{=} \PYG{n}{position} \PYG{o}{\PYGZhy{}} \PYG{n}{seqStart} \PYG{o}{+} \PYG{l+m+mi}{1}
                        \PYG{n}{seqMask}\PYG{p}{[}\PYG{n}{mask\PYGZus{}position}\PYG{o}{:}\PYG{n}{min}\PYG{p}{(}\PYG{n}{maskLength}\PYG{p}{,}\PYG{n}{mask\PYGZus{}position} \PYG{o}{+} \PYG{n}{partition\PYGZus{}extent}\PYG{p}{),}\PYG{l+m+mi}{1}\PYG{p}{]} \PYG{o}{.=} \PYG{n}{partition\PYGZus{}code}
                        \PYG{k}{if} \PYG{n}{position\PYGZus{}strand} \PYG{o}{==} \PYG{l+s+sc}{\PYGZsq{}+\PYGZsq{}}
                            \PYG{n}{seqMask}\PYG{p}{[}\PYG{n}{mask\PYGZus{}position}\PYG{o}{:}\PYG{n}{min}\PYG{p}{(}\PYG{n}{maskLength}\PYG{p}{,}\PYG{n}{mask\PYGZus{}position} \PYG{o}{+} \PYG{n}{partition\PYGZus{}extent}\PYG{p}{),}\PYG{l+m+mi}{2}\PYG{p}{]} \PYG{o}{.=} \PYG{l+m+mi}{1}
                        \PYG{k}{elseif} \PYG{n}{position\PYGZus{}strand} \PYG{o}{==} \PYG{l+s+sc}{\PYGZsq{}\PYGZhy{}\PYGZsq{}}
                            \PYG{n}{seqMask}\PYG{p}{[}\PYG{n}{mask\PYGZus{}position}\PYG{o}{:}\PYG{n}{min}\PYG{p}{(}\PYG{n}{maskLength}\PYG{p}{,}\PYG{n}{mask\PYGZus{}position} \PYG{o}{+} \PYG{n}{partition\PYGZus{}extent}\PYG{p}{),}\PYG{l+m+mi}{2}\PYG{p}{]} \PYG{o}{.=} \PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}
                        \PYG{k}{else}
                            \PYG{n}{seqMask}\PYG{p}{[}\PYG{n}{mask\PYGZus{}position}\PYG{o}{:}\PYG{n}{min}\PYG{p}{(}\PYG{n}{maskLength}\PYG{p}{,}\PYG{n}{mask\PYGZus{}position} \PYG{o}{+} \PYG{n}{partition\PYGZus{}extent}\PYG{p}{),}\PYG{l+m+mi}{2}\PYG{p}{]} \PYG{o}{.=} \PYG{l+m+mi}{0}
                        \PYG{k}{end}
                
                        \PYG{n}{position} \PYG{o}{+=} \PYG{n}{partition\PYGZus{}extent} \PYG{o}{+} \PYG{l+m+mi}{1}
                    \PYG{k}{end}
                
                    \PYG{k}{return} \PYG{n}{seqMask}
                \PYG{k}{end}

                \PYG{k}{function} \PYG{n}{find\PYGZus{}position\PYGZus{}partition}\PYG{p}{(}\PYG{n}{position}\PYG{o}{::}\PYG{k+kt}{Integer}\PYG{p}{,} \PYG{n}{partition\PYGZus{}dict}\PYG{o}{::}\PYG{k+kt}{Dict}\PYG{p}{\PYGZob{}}\PYG{n}{String}\PYG{p}{,} \PYG{n}{DataFrame}\PYG{p}{\PYGZcb{})}
                    \PYG{n}{foundPos} \PYG{o}{=} \PYG{k+kc}{false}
                    \PYG{n}{position\PYGZus{}partition\PYGZus{}id} \PYG{o}{=} \PYG{l+s}{\PYGZdq{}\PYGZdq{}}
                    \PYG{n}{three\PYGZus{}prime\PYGZus{}extent} \PYG{o}{=} \PYG{l+m+mi}{0}
                    \PYG{n}{sample\PYGZus{}strand} \PYG{o}{=} \PYG{l+m+mi}{0}
                    \PYG{k}{for} \PYG{p}{(}\PYG{n}{partition\PYGZus{}id}\PYG{p}{,} \PYG{n}{partition}\PYG{p}{)} \PYG{k+kp}{in} \PYG{n}{partition\PYGZus{}dict}
                        \PYG{n}{hitindex} \PYG{o}{=} \PYG{n}{findfirst}\PYG{p}{(}\PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{x}\PYG{o}{\PYGZgt{}=}\PYG{n}{position}\PYG{p}{,} \PYG{n}{partition}\PYG{o}{.}\PYG{n}{End}\PYG{p}{)}
                        \PYG{k}{if} \PYG{n}{hitindex} \PYG{o}{!=} \PYG{n+nb}{nothing}
                            \PYG{k}{if} \PYG{n}{position} \PYG{o}{\PYGZgt{}=} \PYG{n}{partition}\PYG{o}{.}\PYG{n}{Start}\PYG{p}{[}\PYG{n}{hitindex}\PYG{p}{]}
                                \PYG{n}{foundPos}\PYG{o}{=}\PYG{k+kc}{true}
                                \PYG{n}{position\PYGZus{}partition\PYGZus{}id} \PYG{o}{=} \PYG{n}{partition\PYGZus{}id}
                                \PYG{n}{three\PYGZus{}prime\PYGZus{}extent} \PYG{o}{=} \PYG{n}{partition}\PYG{o}{.}\PYG{n}{End}\PYG{p}{[}\PYG{n}{hitindex}\PYG{p}{]} \PYG{o}{\PYGZhy{}} \PYG{n}{position}
                                \PYG{k}{if} \PYG{n}{partition\PYGZus{}id} \PYG{o}{==} \PYG{l+s}{\PYGZdq{}exon\PYGZdq{}} \PYG{o}{||} \PYG{n}{partition\PYGZus{}id} \PYG{o}{==} \PYG{l+s}{\PYGZdq{}periexonic\PYGZdq{}}
                                    \PYG{n}{sample\PYGZus{}strand} \PYG{o}{=} \PYG{n}{partition}\PYG{o}{.}\PYG{n}{Strand}\PYG{p}{[}\PYG{n}{hitindex}\PYG{p}{]}
                                \PYG{k}{end}
                            \PYG{k}{end}
                        \PYG{k}{end}
                    \PYG{k}{end}
                
                    \PYG{k}{if} \PYG{n}{foundPos} \PYG{o}{==} \PYG{k+kc}{false}
                        \PYG{n}{throw}\PYG{p}{(}\PYG{k+kt}{DomainError}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Position }\PYG{l+s+si}{\PYGZdl{}position}\PYG{l+s}{ not found among partition coordinates!\PYGZdq{}}\PYG{p}{))}
                    \PYG{k}{else}
                        \PYG{k}{return} \PYG{n}{position\PYGZus{}partition\PYGZus{}id}\PYG{p}{,} \PYG{n}{three\PYGZus{}prime\PYGZus{}extent}\PYG{p}{,} \PYG{n}{sample\PYGZus{}strand}
                    \PYG{k}{end}
                \PYG{k}{end}

\PYG{c}{\PYGZsh{}function to partition a genome into coordinate sets of:}
\PYG{c}{\PYGZsh{}merged exons}
\PYG{c}{\PYGZsh{}\PYGZdq{}periexonic\PYGZdq{} sequences (genes with 5\PYGZsq{} and 3\PYGZsq{} boundaries projected \PYGZhy{}/+perigenic\PYGZus{}pad bp, minus exons) \PYGZhy{} includes promoter elements, introns, 3\PYGZsq{} elements}
\PYG{c}{\PYGZsh{}intergenic sequences (everything else)}
\PYG{c}{\PYGZsh{}given a valid gff3}
\PYG{k}{function} \PYG{n}{partition\PYGZus{}genome\PYGZus{}coordinates}\PYG{p}{(}\PYG{n}{gff3\PYGZus{}path}\PYG{o}{::}\PYG{n}{String}\PYG{p}{,} \PYG{n}{perigenic\PYGZus{}pad}\PYG{o}{::}\PYG{k+kt}{Integer}\PYG{o}{=}\PYG{l+m+mi}{500}\PYG{p}{)}
    \PYG{c}{\PYGZsh{} construct dataframes of scaffolds and metacoordinates}
    \PYG{n}{scaffold\PYGZus{}df} \PYG{o}{=} \PYG{n}{build\PYGZus{}scaffold\PYGZus{}df}\PYG{p}{(}\PYG{n}{gff3\PYGZus{}path}\PYG{p}{)}

    \PYG{c}{\PYGZsh{}partition genome into intragenic, periexonic, and exonic coordinate sets}
    \PYG{c}{\PYGZsh{}assemble exonic featureset}
    \PYG{n}{exon\PYGZus{}df} \PYG{o}{=} \PYG{n}{DataFrame}\PYG{p}{(}\PYG{n}{SeqID} \PYG{o}{=} \PYG{n}{String}\PYG{p}{[],} \PYG{n}{Start} \PYG{o}{=} \PYG{k+kt}{Integer}\PYG{p}{[],} \PYG{n}{End} \PYG{o}{=} \PYG{k+kt}{Integer}\PYG{p}{[],} \PYG{n}{Strand}\PYG{o}{=}\PYG{k+kt}{Char}\PYG{p}{[])}
    \PYG{n}{build\PYGZus{}feature\PYGZus{}df!}\PYG{p}{(}\PYG{n}{gff3\PYGZus{}path}\PYG{p}{,} \PYG{l+s}{\PYGZdq{}CDS\PYGZdq{}}\PYG{p}{,} \PYG{l+s}{\PYGZdq{}MT\PYGZdq{}}\PYG{p}{,} \PYG{n}{exon\PYGZus{}df}\PYG{p}{)}

    \PYG{c}{\PYGZsh{}project exon coordinates onto the scaffold bitwise, merging overlapping features and returning the merged dataframe}
    \PYG{n}{merged\PYGZus{}exon\PYGZus{}df} \PYG{o}{=} \PYG{n}{DataFrame}\PYG{p}{(}\PYG{n}{SeqID} \PYG{o}{=} \PYG{n}{String}\PYG{p}{[],} \PYG{n}{Start} \PYG{o}{=} \PYG{k+kt}{Integer}\PYG{p}{[],} \PYG{n}{End} \PYG{o}{=} \PYG{k+kt}{Integer}\PYG{p}{[],} \PYG{n}{Strand}\PYG{o}{=}\PYG{k+kt}{Char}\PYG{p}{[])}
    \PYG{n+nd}{@showprogress} \PYG{l+m+mi}{1} \PYG{l+s}{\PYGZdq{}Partitioning exons...\PYGZdq{}} \PYG{k}{for} \PYG{n}{scaffold\PYGZus{}subframe} \PYG{k+kp}{in} \PYG{n}{DataFrames}\PYG{o}{.}\PYG{n}{groupby}\PYG{p}{(}\PYG{n}{exon\PYGZus{}df}\PYG{p}{,} \PYG{o}{:}\PYG{n}{SeqID}\PYG{p}{)} \PYG{c}{\PYGZsh{} for each scaffold subframe that has exon features}
        \PYG{n}{scaffold\PYGZus{}id}  \PYG{o}{=} \PYG{n}{scaffold\PYGZus{}subframe}\PYG{o}{.}\PYG{n}{SeqID}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{]} \PYG{c}{\PYGZsh{}get the scaffold id}
        \PYG{n}{scaffold\PYGZus{}bitarray} \PYG{o}{=} \PYG{n}{init\PYGZus{}scaffold\PYGZus{}bitarray}\PYG{p}{(}\PYG{n}{scaffold\PYGZus{}id}\PYG{p}{,} \PYG{n}{scaffold\PYGZus{}df}\PYG{p}{,} \PYG{k+kc}{false}\PYG{p}{,} \PYG{n}{stranded}\PYG{o}{=}\PYG{k+kc}{true}\PYG{p}{)} \PYG{c}{\PYGZsh{}init a stranded bitarray of scaffold length}
        \PYG{n}{project\PYGZus{}features\PYGZus{}to\PYGZus{}bitarray!}\PYG{p}{(}\PYG{n}{scaffold\PYGZus{}subframe}\PYG{p}{,}\PYG{n}{scaffold\PYGZus{}bitarray}\PYG{p}{)} \PYG{c}{\PYGZsh{}project features as Trues on bitarray of falses}
        \PYG{n}{merged\PYGZus{}subframe} \PYG{o}{=} \PYG{n}{get\PYGZus{}feature\PYGZus{}df\PYGZus{}from\PYGZus{}bitarray}\PYG{p}{(}\PYG{n}{scaffold\PYGZus{}id}\PYG{p}{,} \PYG{n}{scaffold\PYGZus{}bitarray}\PYG{p}{)} \PYG{c}{\PYGZsh{}get a feature df from the projected bitarray}
        \PYG{n}{append!}\PYG{p}{(}\PYG{n}{merged\PYGZus{}exon\PYGZus{}df}\PYG{p}{,}\PYG{n}{merged\PYGZus{}subframe}\PYG{p}{)} \PYG{c}{\PYGZsh{}append the merged scaffold df to the overall merged df}
    \PYG{k}{end}

    \PYG{c}{\PYGZsh{}assemble gene featureset}
    \PYG{n}{gene\PYGZus{}df} \PYG{o}{=}  \PYG{n}{DataFrame}\PYG{p}{(}\PYG{n}{SeqID} \PYG{o}{=} \PYG{n}{String}\PYG{p}{[],} \PYG{n}{Start} \PYG{o}{=} \PYG{k+kt}{Integer}\PYG{p}{[],} \PYG{n}{End} \PYG{o}{=} \PYG{k+kt}{Integer}\PYG{p}{[],} \PYG{n}{Strand} \PYG{o}{=} \PYG{k+kt}{Char}\PYG{p}{[])}
    \PYG{n}{build\PYGZus{}feature\PYGZus{}df!}\PYG{p}{(}\PYG{n}{gff3\PYGZus{}path}\PYG{p}{,} \PYG{l+s}{\PYGZdq{}gene\PYGZdq{}}\PYG{p}{,} \PYG{l+s}{\PYGZdq{}MT\PYGZdq{}}\PYG{p}{,} \PYG{n}{gene\PYGZus{}df}\PYG{p}{)}

    \PYG{n}{perigenic\PYGZus{}pad} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{0} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{n}{add\PYGZus{}pad\PYGZus{}to\PYGZus{}coordinates!}\PYG{p}{(}\PYG{n}{gene\PYGZus{}df}\PYG{p}{,} \PYG{n}{scaffold\PYGZus{}df}\PYG{p}{,} \PYG{n}{perigenic\PYGZus{}pad}\PYG{p}{)} \PYG{c}{\PYGZsh{}if a perigenic pad is specified (to capture promoter/downstream elements etc in the periexonic set), apply it to the gene coords}

    \PYG{c}{\PYGZsh{}build intergenic coordinate set by subtracting gene features from scaffold bitarrays}
    \PYG{n}{intergenic\PYGZus{}df} \PYG{o}{=} \PYG{n}{DataFrame}\PYG{p}{(}\PYG{n}{SeqID} \PYG{o}{=} \PYG{n}{String}\PYG{p}{[],} \PYG{n}{Start} \PYG{o}{=} \PYG{k+kt}{Integer}\PYG{p}{[],} \PYG{n}{End} \PYG{o}{=} \PYG{k+kt}{Integer}\PYG{p}{[])}
    \PYG{n+nd}{@showprogress} \PYG{l+m+mi}{1} \PYG{l+s}{\PYGZdq{}Partitioning intergenic regions...\PYGZdq{}} \PYG{k}{for} \PYG{n}{scaffold\PYGZus{}subframe} \PYG{k+kp}{in} \PYG{n}{DataFrames}\PYG{o}{.}\PYG{n}{groupby}\PYG{p}{(}\PYG{n}{scaffold\PYGZus{}df}\PYG{p}{,} \PYG{o}{:}\PYG{n}{SeqID}\PYG{p}{)} \PYG{c}{\PYGZsh{} for each scaffold subframe that has exon features}
        \PYG{n}{scaffold\PYGZus{}id}  \PYG{o}{=} \PYG{n}{scaffold\PYGZus{}subframe}\PYG{o}{.}\PYG{n}{SeqID}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{]} \PYG{c}{\PYGZsh{}get the scaffold id}
        \PYG{n}{scaffold\PYGZus{}bitarray} \PYG{o}{=} \PYG{n}{init\PYGZus{}scaffold\PYGZus{}bitarray}\PYG{p}{(}\PYG{n}{scaffold\PYGZus{}id}\PYG{p}{,} \PYG{n}{scaffold\PYGZus{}df}\PYG{p}{,} \PYG{k+kc}{true}\PYG{p}{)} \PYG{c}{\PYGZsh{}init a bitarray of scaffold length}
        \PYG{k}{if} \PYG{n}{any}\PYG{p}{(}\PYG{n}{isequal}\PYG{p}{(}\PYG{n}{scaffold\PYGZus{}id}\PYG{p}{),}\PYG{n}{gene\PYGZus{}df}\PYG{o}{.}\PYG{n}{SeqID}\PYG{p}{)} \PYG{c}{\PYGZsh{}if any genes on the scafold}
            \PYG{n}{scaffold\PYGZus{}genes}\PYG{o}{=}\PYG{n}{gene\PYGZus{}df}\PYG{p}{[}\PYG{n}{findall}\PYG{p}{(}\PYG{n}{isequal}\PYG{p}{(}\PYG{n}{scaffold\PYGZus{}id}\PYG{p}{),} \PYG{n}{gene\PYGZus{}df}\PYG{o}{.}\PYG{n}{SeqID}\PYG{p}{),} \PYG{o}{:}\PYG{p}{]} \PYG{c}{\PYGZsh{}get the gene rows by finding the scaffold\PYGZus{}id}
            \PYG{n}{subtract\PYGZus{}features\PYGZus{}from\PYGZus{}bitarray!}\PYG{p}{(}\PYG{n}{scaffold\PYGZus{}genes}\PYG{p}{,}\PYG{n}{scaffold\PYGZus{}bitarray}\PYG{p}{)} \PYG{c}{\PYGZsh{}subtract the gene positions from the scaffold bitarray}
        \PYG{k}{end}
        \PYG{n}{intragenic\PYGZus{}subframe} \PYG{o}{=} \PYG{n}{get\PYGZus{}feature\PYGZus{}df\PYGZus{}from\PYGZus{}bitarray}\PYG{p}{(}\PYG{n}{scaffold\PYGZus{}id}\PYG{p}{,} \PYG{n}{scaffold\PYGZus{}bitarray}\PYG{p}{)} \PYG{c}{\PYGZsh{}get a feature df from the projected bitarray}
        \PYG{n}{append!}\PYG{p}{(}\PYG{n}{intergenic\PYGZus{}df}\PYG{p}{,}\PYG{n}{intragenic\PYGZus{}subframe}\PYG{p}{)} \PYG{c}{\PYGZsh{}append the merged scaffold df to the overall merged df}
    \PYG{k}{end}

    \PYG{c}{\PYGZsh{}build periexonic set by projecting gene coordinates onto the scaffold bitwise, then subtracting the exons}
    \PYG{n}{periexonic\PYGZus{}df} \PYG{o}{=} \PYG{n}{DataFrame}\PYG{p}{(}\PYG{n}{SeqID} \PYG{o}{=} \PYG{n}{String}\PYG{p}{[],} \PYG{n}{Start} \PYG{o}{=} \PYG{k+kt}{Integer}\PYG{p}{[],} \PYG{n}{End} \PYG{o}{=} \PYG{k+kt}{Integer}\PYG{p}{[],} \PYG{n}{Strand}\PYG{o}{=}\PYG{k+kt}{Char}\PYG{p}{[])}
    \PYG{n+nd}{@showprogress} \PYG{l+m+mi}{1} \PYG{l+s}{\PYGZdq{}Partitioning periexonic regions...\PYGZdq{}} \PYG{k}{for} \PYG{n}{gene\PYGZus{}subframe} \PYG{k+kp}{in} \PYG{n}{DataFrames}\PYG{o}{.}\PYG{n}{groupby}\PYG{p}{(}\PYG{n}{gene\PYGZus{}df}\PYG{p}{,} \PYG{o}{:}\PYG{n}{SeqID}\PYG{p}{)} \PYG{c}{\PYGZsh{} for each scaffold subframe that has exon features}
        \PYG{n}{scaffold\PYGZus{}id}  \PYG{o}{=} \PYG{n}{gene\PYGZus{}subframe}\PYG{o}{.}\PYG{n}{SeqID}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{]} \PYG{c}{\PYGZsh{}get the scaffold id}
        \PYG{n}{scaffold\PYGZus{}bitarray} \PYG{o}{=} \PYG{n}{init\PYGZus{}scaffold\PYGZus{}bitarray}\PYG{p}{(}\PYG{n}{scaffold\PYGZus{}id}\PYG{p}{,} \PYG{n}{scaffold\PYGZus{}df}\PYG{p}{,} \PYG{k+kc}{false}\PYG{p}{,} \PYG{n}{stranded}\PYG{o}{=}\PYG{k+kc}{true}\PYG{p}{)} \PYG{c}{\PYGZsh{}init a bitarray of scaffold length}
        \PYG{n}{project\PYGZus{}features\PYGZus{}to\PYGZus{}bitarray!}\PYG{p}{(}\PYG{n}{gene\PYGZus{}subframe}\PYG{p}{,}\PYG{n}{scaffold\PYGZus{}bitarray}\PYG{p}{)} \PYG{c}{\PYGZsh{}project features as Trues on bitarray of falses}
        \PYG{k}{if} \PYG{n}{any}\PYG{p}{(}\PYG{n}{isequal}\PYG{p}{(}\PYG{n}{scaffold\PYGZus{}id}\PYG{p}{),}\PYG{n}{merged\PYGZus{}exon\PYGZus{}df}\PYG{o}{.}\PYG{n}{SeqID}\PYG{p}{)}
            \PYG{n}{scaffold\PYGZus{}exons}\PYG{o}{=}\PYG{n}{merged\PYGZus{}exon\PYGZus{}df}\PYG{p}{[}\PYG{n}{findall}\PYG{p}{(}\PYG{n}{isequal}\PYG{p}{(}\PYG{n}{scaffold\PYGZus{}id}\PYG{p}{),} \PYG{n}{merged\PYGZus{}exon\PYGZus{}df}\PYG{o}{.}\PYG{n}{SeqID}\PYG{p}{),} \PYG{o}{:}\PYG{p}{]}
            \PYG{n}{subtract\PYGZus{}features\PYGZus{}from\PYGZus{}bitarray!}\PYG{p}{(}\PYG{n}{scaffold\PYGZus{}exons}\PYG{p}{,}\PYG{n}{scaffold\PYGZus{}bitarray}\PYG{p}{)}
        \PYG{k}{end}
        \PYG{n}{periexonic\PYGZus{}subframe} \PYG{o}{=} \PYG{n}{get\PYGZus{}feature\PYGZus{}df\PYGZus{}from\PYGZus{}bitarray}\PYG{p}{(}\PYG{n}{scaffold\PYGZus{}id}\PYG{p}{,} \PYG{n}{scaffold\PYGZus{}bitarray}\PYG{p}{)} \PYG{c}{\PYGZsh{}get a feature df from the projected bitarray}
        \PYG{n}{append!}\PYG{p}{(}\PYG{n}{periexonic\PYGZus{}df}\PYG{p}{,}\PYG{n}{periexonic\PYGZus{}subframe}\PYG{p}{)} \PYG{c}{\PYGZsh{}append the merged scaffold df to the overall merged df}
    \PYG{k}{end}

    \PYG{k}{return} \PYG{k+kt}{Dict}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}exon\PYGZdq{}}\PYG{o}{=\PYGZgt{}}\PYG{n}{merged\PYGZus{}exon\PYGZus{}df}\PYG{p}{,} \PYG{l+s}{\PYGZdq{}periexonic\PYGZdq{}}\PYG{o}{=\PYGZgt{}}\PYG{n}{periexonic\PYGZus{}df}\PYG{p}{,} \PYG{l+s}{\PYGZdq{}intergenic\PYGZdq{}}\PYG{o}{=\PYGZgt{}}\PYG{n}{intergenic\PYGZus{}df}\PYG{p}{)}
\PYG{k}{end}

            \PYG{c}{\PYGZsh{}partition\PYGZus{}genome\PYGZus{}coordinates() SUBFUNCTIONS}
            \PYG{c}{\PYGZsh{}BITARRAY SCAFFOLD REPRESENTATION SUBFUNCTIONS}
            \PYG{k}{function} \PYG{n}{init\PYGZus{}scaffold\PYGZus{}bitarray}\PYG{p}{(}\PYG{n}{scaffold\PYGZus{}id}\PYG{o}{::}\PYG{n}{String}\PYG{p}{,} \PYG{n}{scaffold\PYGZus{}df}\PYG{p}{,} \PYG{n}{value}\PYG{o}{::}\PYG{k+kt}{Bool}\PYG{p}{;} \PYG{n}{stranded}\PYG{o}{::}\PYG{k+kt}{Bool}\PYG{o}{=}\PYG{k+kc}{false}\PYG{p}{)}
                \PYG{n}{scaffold\PYGZus{}length} \PYG{o}{=} \PYG{n}{scaffold\PYGZus{}df}\PYG{o}{.}\PYG{n}{End}\PYG{p}{[}\PYG{n}{findfirst}\PYG{p}{(}\PYG{n}{isequal}\PYG{p}{(}\PYG{n}{scaffold\PYGZus{}id}\PYG{p}{),} \PYG{n}{scaffold\PYGZus{}df}\PYG{o}{.}\PYG{n}{SeqID}\PYG{p}{)]}
                \PYG{k}{if} \PYG{n}{stranded}
                    \PYG{n}{value} \PYG{o}{?} \PYG{p}{(}\PYG{k}{return} \PYG{n}{rscaffold\PYGZus{}bitarray} \PYG{o}{=} \PYG{n}{trues}\PYG{p}{(}\PYG{n}{scaffold\PYGZus{}length}\PYG{p}{,}\PYG{l+m+mi}{2}\PYG{p}{))} \PYG{o}{:} \PYG{p}{(}\PYG{k}{return} \PYG{n}{rscaffold\PYGZus{}bitarray} \PYG{o}{=} \PYG{n}{falses}\PYG{p}{(}\PYG{n}{scaffold\PYGZus{}length}\PYG{p}{,}\PYG{l+m+mi}{2}\PYG{p}{))}
                \PYG{k}{else}
                    \PYG{n}{value} \PYG{o}{?} \PYG{p}{(}\PYG{k}{return} \PYG{n}{rscaffold\PYGZus{}bitarray} \PYG{o}{=} \PYG{n}{trues}\PYG{p}{(}\PYG{n}{scaffold\PYGZus{}length}\PYG{p}{,}\PYG{l+m+mi}{1}\PYG{p}{))} \PYG{o}{:} \PYG{p}{(}\PYG{k}{return} \PYG{n}{rscaffold\PYGZus{}bitarray} \PYG{o}{=} \PYG{n}{falses}\PYG{p}{(}\PYG{n}{scaffold\PYGZus{}length}\PYG{p}{,}\PYG{l+m+mi}{1}\PYG{p}{))}
                \PYG{k}{end}
            \PYG{k}{end}

            \PYG{k}{function} \PYG{n}{project\PYGZus{}features\PYGZus{}to\PYGZus{}bitarray!}\PYG{p}{(}\PYG{n}{scaffold\PYGZus{}feature\PYGZus{}sf}\PYG{o}{::}\PYG{n}{SubDataFrame}\PYG{p}{,} \PYG{n}{scaffold\PYGZus{}bitarray}\PYG{o}{::}\PYG{k+kt}{BitArray}\PYG{p}{)}
                \PYG{n+nd}{@inbounds} \PYG{k}{for} \PYG{n}{item} \PYG{k+kp}{in} \PYG{n}{eachrow}\PYG{p}{(}\PYG{n}{scaffold\PYGZus{}feature\PYGZus{}sf}\PYG{p}{)}
                    \PYG{n}{scaffold\PYGZus{}bitarray}\PYG{p}{[}\PYG{n}{item}\PYG{o}{.}\PYG{n}{Start}\PYG{o}{:}\PYG{n}{item}\PYG{o}{.}\PYG{n}{End}\PYG{p}{,}\PYG{l+m+mi}{1}\PYG{p}{]} \PYG{o}{=} \PYG{p}{[}\PYG{k+kc}{true} \PYG{k}{for} \PYG{n}{base} \PYG{k+kp}{in} \PYG{n}{item}\PYG{o}{.}\PYG{n}{Start}\PYG{o}{:}\PYG{n}{item}\PYG{o}{.}\PYG{n}{End}\PYG{p}{]}
                    \PYG{k}{if} \PYG{n}{size}\PYG{p}{(}\PYG{n}{scaffold\PYGZus{}bitarray}\PYG{p}{)[}\PYG{l+m+mi}{2}\PYG{p}{]} \PYG{o}{==} \PYG{l+m+mi}{2} \PYG{c}{\PYGZsh{}if the bitarray is stranded}
                        \PYG{k}{if} \PYG{n}{item}\PYG{o}{.}\PYG{n}{Strand} \PYG{o}{==} \PYG{l+s+sc}{\PYGZsq{}+\PYGZsq{}}
                            \PYG{n}{scaffold\PYGZus{}bitarray}\PYG{p}{[}\PYG{n}{item}\PYG{o}{.}\PYG{n}{Start}\PYG{o}{:}\PYG{n}{item}\PYG{o}{.}\PYG{n}{End}\PYG{p}{,}\PYG{l+m+mi}{2}\PYG{p}{]} \PYG{o}{=} \PYG{p}{[}\PYG{k+kc}{true} \PYG{k}{for} \PYG{n}{base} \PYG{k+kp}{in} \PYG{n}{item}\PYG{o}{.}\PYG{n}{Start}\PYG{o}{:}\PYG{n}{item}\PYG{o}{.}\PYG{n}{End}\PYG{p}{]}
                        \PYG{k}{end}
                    \PYG{k}{end}
                \PYG{k}{end}
            \PYG{k}{end}

            \PYG{k}{function} \PYG{n}{subtract\PYGZus{}features\PYGZus{}from\PYGZus{}bitarray!}\PYG{p}{(}\PYG{n}{scaffold\PYGZus{}feature\PYGZus{}sf}\PYG{o}{::}\PYG{n}{DataFrame}\PYG{p}{,} \PYG{n}{scaffold\PYGZus{}bitarray}\PYG{o}{::}\PYG{k+kt}{BitArray}\PYG{p}{)}
                \PYG{n+nd}{@inbounds} \PYG{k}{for} \PYG{n}{item} \PYG{k+kp}{in} \PYG{n}{eachrow}\PYG{p}{(}\PYG{n}{scaffold\PYGZus{}feature\PYGZus{}sf}\PYG{p}{)}
                    \PYG{n}{scaffold\PYGZus{}bitarray}\PYG{p}{[}\PYG{n}{item}\PYG{o}{.}\PYG{n}{Start}\PYG{o}{:}\PYG{n}{item}\PYG{o}{.}\PYG{n}{End}\PYG{p}{,}\PYG{l+m+mi}{1}\PYG{p}{]} \PYG{o}{=} \PYG{p}{[}\PYG{k+kc}{false} \PYG{k}{for} \PYG{n}{base} \PYG{k+kp}{in} \PYG{n}{item}\PYG{o}{.}\PYG{n}{Start}\PYG{o}{:}\PYG{n}{item}\PYG{o}{.}\PYG{n}{End}\PYG{p}{]}
                \PYG{k}{end}
            \PYG{k}{end}

            \PYG{k}{function} \PYG{n}{get\PYGZus{}feature\PYGZus{}df\PYGZus{}from\PYGZus{}bitarray}\PYG{p}{(}\PYG{n}{scaffold\PYGZus{}id}\PYG{o}{::}\PYG{n}{String}\PYG{p}{,} \PYG{n}{scaffold\PYGZus{}bitarray}\PYG{o}{::}\PYG{k+kt}{BitArray}\PYG{p}{)}
                \PYG{n}{size}\PYG{p}{(}\PYG{n}{scaffold\PYGZus{}bitarray}\PYG{p}{)[}\PYG{l+m+mi}{2}\PYG{p}{]} \PYG{o}{==} \PYG{l+m+mi}{2} \PYG{o}{?} \PYG{n}{scaffold\PYGZus{}feature\PYGZus{}df} \PYG{o}{=} \PYG{n}{DataFrame}\PYG{p}{(}\PYG{n}{SeqID} \PYG{o}{=} \PYG{n}{String}\PYG{p}{[],} \PYG{n}{Start} \PYG{o}{=} \PYG{k+kt}{Integer}\PYG{p}{[],} \PYG{n}{End} \PYG{o}{=} \PYG{k+kt}{Integer}\PYG{p}{[],} \PYG{n}{Strand}\PYG{o}{=}\PYG{k+kt}{Char}\PYG{p}{[])} \PYG{o}{:} \PYG{n}{scaffold\PYGZus{}feature\PYGZus{}df} \PYG{o}{=} \PYG{n}{DataFrame}\PYG{p}{(}\PYG{n}{SeqID} \PYG{o}{=} \PYG{n}{String}\PYG{p}{[],} \PYG{n}{Start} \PYG{o}{=} \PYG{k+kt}{Integer}\PYG{p}{[],} \PYG{n}{End} \PYG{o}{=} \PYG{k+kt}{Integer}\PYG{p}{[])}

                \PYG{n}{new\PYGZus{}feature\PYGZus{}start} \PYG{o}{=} \PYG{n}{findnext}\PYG{p}{(}\PYG{n}{view}\PYG{p}{(}\PYG{n}{scaffold\PYGZus{}bitarray}\PYG{p}{,}\PYG{o}{:}\PYG{p}{,}\PYG{l+m+mi}{1}\PYG{p}{),} \PYG{l+m+mi}{1}\PYG{p}{)}
                \PYG{k}{while} \PYG{n}{new\PYGZus{}feature\PYGZus{}start} \PYG{o}{!=} \PYG{n+nb}{nothing} \PYG{c}{\PYGZsh{} while new features are still found on the bitarray}
                        \PYG{k}{if} \PYG{n}{size}\PYG{p}{(}\PYG{n}{scaffold\PYGZus{}bitarray}\PYG{p}{)[}\PYG{l+m+mi}{2}\PYG{p}{]} \PYG{o}{==} \PYG{l+m+mi}{2} \PYG{c}{\PYGZsh{}if stranded, get strand info}
                            \PYG{n}{scaffold\PYGZus{}bitarray}\PYG{p}{[}\PYG{n}{new\PYGZus{}feature\PYGZus{}start}\PYG{p}{,}\PYG{l+m+mi}{2}\PYG{p}{]} \PYG{o}{==} \PYG{l+m+mi}{1} \PYG{o}{?} \PYG{n}{new\PYGZus{}feature\PYGZus{}strand} \PYG{o}{=} \PYG{l+s+sc}{\PYGZsq{}+\PYGZsq{}} \PYG{o}{:} \PYG{n}{new\PYGZus{}feature\PYGZus{}strand} \PYG{o}{=} \PYG{l+s+sc}{\PYGZsq{}\PYGZhy{}\PYGZsq{}}
                        \PYG{k}{end}
                        \PYG{k}{if} \PYG{n}{findnext}\PYG{p}{(}\PYG{o}{!}\PYG{n}{eval}\PYG{p}{,}\PYG{n}{view}\PYG{p}{(}\PYG{n}{scaffold\PYGZus{}bitarray}\PYG{p}{,}\PYG{o}{:}\PYG{p}{,}\PYG{l+m+mi}{1}\PYG{p}{),}\PYG{n}{new\PYGZus{}feature\PYGZus{}start}\PYG{p}{)} \PYG{o}{!=} \PYG{n+nb}{nothing}
                            \PYG{n}{new\PYGZus{}feature\PYGZus{}end} \PYG{o}{=} \PYG{n}{findnext}\PYG{p}{(}\PYG{o}{!}\PYG{n}{eval}\PYG{p}{,}\PYG{n}{view}\PYG{p}{(}\PYG{n}{scaffold\PYGZus{}bitarray}\PYG{p}{,}\PYG{o}{:}\PYG{p}{,}\PYG{l+m+mi}{1}\PYG{p}{),}\PYG{n}{new\PYGZus{}feature\PYGZus{}start}\PYG{p}{)}\PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1} \PYG{c}{\PYGZsh{}find next false after feature start and subtract 1 for feature end}
                        \PYG{k}{else}
                            \PYG{n}{new\PYGZus{}feature\PYGZus{}end} \PYG{o}{=} \PYG{n}{size}\PYG{p}{(}\PYG{n}{scaffold\PYGZus{}bitarray}\PYG{p}{)[}\PYG{l+m+mi}{1}\PYG{p}{]} \PYG{c}{\PYGZsh{}if none is found, the end of the feature is the end of hte scaffold}
                        \PYG{k}{end}
                        \PYG{n}{size}\PYG{p}{(}\PYG{n}{scaffold\PYGZus{}bitarray}\PYG{p}{)[}\PYG{l+m+mi}{2}\PYG{p}{]} \PYG{o}{==} \PYG{l+m+mi}{2} \PYG{o}{?} \PYG{n}{push!}\PYG{p}{(}\PYG{n}{scaffold\PYGZus{}feature\PYGZus{}df}\PYG{p}{,[}\PYG{n}{scaffold\PYGZus{}id}\PYG{p}{,} \PYG{n}{new\PYGZus{}feature\PYGZus{}start}\PYG{p}{,} \PYG{n}{new\PYGZus{}feature\PYGZus{}end}\PYG{p}{,} \PYG{n}{new\PYGZus{}feature\PYGZus{}strand}\PYG{p}{])} \PYG{o}{:} \PYG{n}{push!}\PYG{p}{(}\PYG{n}{scaffold\PYGZus{}feature\PYGZus{}df}\PYG{p}{,[}\PYG{n}{scaffold\PYGZus{}id}\PYG{p}{,} \PYG{n}{new\PYGZus{}feature\PYGZus{}start}\PYG{p}{,} \PYG{n}{new\PYGZus{}feature\PYGZus{}end}\PYG{p}{])} \PYG{c}{\PYGZsh{}push stranded feature info as appropriate}
                        \PYG{n}{new\PYGZus{}feature\PYGZus{}start} \PYG{o}{=} \PYG{n}{findnext}\PYG{p}{(}\PYG{n}{view}\PYG{p}{(}\PYG{n}{scaffold\PYGZus{}bitarray}\PYG{p}{,}\PYG{o}{:}\PYG{p}{,}\PYG{l+m+mi}{1}\PYG{p}{),} \PYG{n}{new\PYGZus{}feature\PYGZus{}end}\PYG{o}{+}\PYG{l+m+mi}{1}\PYG{p}{)}
                \PYG{k}{end}
                \PYG{k}{return} \PYG{n}{scaffold\PYGZus{}feature\PYGZus{}df}
            \PYG{k}{end}
\end{Verbatim}
